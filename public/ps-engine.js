/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/gl-matrix/esm/common.js":
/*!**********************************************!*\
  !*** ./node_modules/gl-matrix/esm/common.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EPSILON\": () => (/* binding */ EPSILON),\n/* harmony export */   \"ARRAY_TYPE\": () => (/* binding */ ARRAY_TYPE),\n/* harmony export */   \"RANDOM\": () => (/* binding */ RANDOM),\n/* harmony export */   \"setMatrixArrayType\": () => (/* binding */ setMatrixArrayType),\n/* harmony export */   \"toRadian\": () => (/* binding */ toRadian),\n/* harmony export */   \"equals\": () => (/* binding */ equals)\n/* harmony export */ });\n/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/common.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat3.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat3.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"fromMat4\": () => (/* binding */ fromMat4),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"transpose\": () => (/* binding */ transpose),\n/* harmony export */   \"invert\": () => (/* binding */ invert),\n/* harmony export */   \"adjoint\": () => (/* binding */ adjoint),\n/* harmony export */   \"determinant\": () => (/* binding */ determinant),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"translate\": () => (/* binding */ translate),\n/* harmony export */   \"rotate\": () => (/* binding */ rotate),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"fromTranslation\": () => (/* binding */ fromTranslation),\n/* harmony export */   \"fromRotation\": () => (/* binding */ fromRotation),\n/* harmony export */   \"fromScaling\": () => (/* binding */ fromScaling),\n/* harmony export */   \"fromMat2d\": () => (/* binding */ fromMat2d),\n/* harmony export */   \"fromQuat\": () => (/* binding */ fromQuat),\n/* harmony export */   \"normalFromMat4\": () => (/* binding */ normalFromMat4),\n/* harmony export */   \"projection\": () => (/* binding */ projection),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"frob\": () => (/* binding */ frob),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiplyScalar\": () => (/* binding */ multiplyScalar),\n/* harmony export */   \"multiplyScalarAndAdd\": () => (/* binding */ multiplyScalarAndAdd),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"sub\": () => (/* binding */ sub)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(9);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nvar sub = subtract;\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/mat3.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat4.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat4.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"transpose\": () => (/* binding */ transpose),\n/* harmony export */   \"invert\": () => (/* binding */ invert),\n/* harmony export */   \"adjoint\": () => (/* binding */ adjoint),\n/* harmony export */   \"determinant\": () => (/* binding */ determinant),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"translate\": () => (/* binding */ translate),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"rotate\": () => (/* binding */ rotate),\n/* harmony export */   \"rotateX\": () => (/* binding */ rotateX),\n/* harmony export */   \"rotateY\": () => (/* binding */ rotateY),\n/* harmony export */   \"rotateZ\": () => (/* binding */ rotateZ),\n/* harmony export */   \"fromTranslation\": () => (/* binding */ fromTranslation),\n/* harmony export */   \"fromScaling\": () => (/* binding */ fromScaling),\n/* harmony export */   \"fromRotation\": () => (/* binding */ fromRotation),\n/* harmony export */   \"fromXRotation\": () => (/* binding */ fromXRotation),\n/* harmony export */   \"fromYRotation\": () => (/* binding */ fromYRotation),\n/* harmony export */   \"fromZRotation\": () => (/* binding */ fromZRotation),\n/* harmony export */   \"fromRotationTranslation\": () => (/* binding */ fromRotationTranslation),\n/* harmony export */   \"fromQuat2\": () => (/* binding */ fromQuat2),\n/* harmony export */   \"getTranslation\": () => (/* binding */ getTranslation),\n/* harmony export */   \"getScaling\": () => (/* binding */ getScaling),\n/* harmony export */   \"getRotation\": () => (/* binding */ getRotation),\n/* harmony export */   \"fromRotationTranslationScale\": () => (/* binding */ fromRotationTranslationScale),\n/* harmony export */   \"fromRotationTranslationScaleOrigin\": () => (/* binding */ fromRotationTranslationScaleOrigin),\n/* harmony export */   \"fromQuat\": () => (/* binding */ fromQuat),\n/* harmony export */   \"frustum\": () => (/* binding */ frustum),\n/* harmony export */   \"perspectiveNO\": () => (/* binding */ perspectiveNO),\n/* harmony export */   \"perspective\": () => (/* binding */ perspective),\n/* harmony export */   \"perspectiveZO\": () => (/* binding */ perspectiveZO),\n/* harmony export */   \"perspectiveFromFieldOfView\": () => (/* binding */ perspectiveFromFieldOfView),\n/* harmony export */   \"orthoNO\": () => (/* binding */ orthoNO),\n/* harmony export */   \"ortho\": () => (/* binding */ ortho),\n/* harmony export */   \"orthoZO\": () => (/* binding */ orthoZO),\n/* harmony export */   \"lookAt\": () => (/* binding */ lookAt),\n/* harmony export */   \"targetTo\": () => (/* binding */ targetTo),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"frob\": () => (/* binding */ frob),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiplyScalar\": () => (/* binding */ multiplyScalar),\n/* harmony export */   \"multiplyScalarAndAdd\": () => (/* binding */ multiplyScalarAndAdd),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"sub\": () => (/* binding */ sub)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nfunction fromQuat2(out, a) {\n  var translation = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nfunction getRotation(out, mat) {\n  var scaling = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nvar perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nvar ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON && Math.abs(eyey - centery) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON && Math.abs(eyez - centerz) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nvar sub = subtract;\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/mat4.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/quat.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/quat.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"setAxisAngle\": () => (/* binding */ setAxisAngle),\n/* harmony export */   \"getAxisAngle\": () => (/* binding */ getAxisAngle),\n/* harmony export */   \"getAngle\": () => (/* binding */ getAngle),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"rotateX\": () => (/* binding */ rotateX),\n/* harmony export */   \"rotateY\": () => (/* binding */ rotateY),\n/* harmony export */   \"rotateZ\": () => (/* binding */ rotateZ),\n/* harmony export */   \"calculateW\": () => (/* binding */ calculateW),\n/* harmony export */   \"exp\": () => (/* binding */ exp),\n/* harmony export */   \"ln\": () => (/* binding */ ln),\n/* harmony export */   \"pow\": () => (/* binding */ pow),\n/* harmony export */   \"slerp\": () => (/* binding */ slerp),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"invert\": () => (/* binding */ invert),\n/* harmony export */   \"conjugate\": () => (/* binding */ conjugate),\n/* harmony export */   \"fromMat3\": () => (/* binding */ fromMat3),\n/* harmony export */   \"fromEuler\": () => (/* binding */ fromEuler),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"rotationTo\": () => (/* binding */ rotationTo),\n/* harmony export */   \"sqlerp\": () => (/* binding */ sqlerp),\n/* harmony export */   \"setAxes\": () => (/* binding */ setAxes)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n/* harmony import */ var _mat3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat3.js */ \"./node_modules/gl-matrix/esm/mat3.js\");\n/* harmony import */ var _vec3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec3.js */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _vec4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vec4.js */ \"./node_modules/gl-matrix/esm/vec4.js\");\n\n\n\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nfunction getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM();\n  var u2 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM();\n  var u3 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nvar clone = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nvar fromValues = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nvar copy = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nvar set = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nvar add = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nvar scale = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nvar dot = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nvar lerp = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nvar length = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nvar len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nvar squaredLength = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nvar sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nvar normalize = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nvar exactEquals = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nvar equals = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nvar rotationTo = function () {\n  var tmpvec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.create();\n  var xUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.fromValues(1, 0, 0);\n  var yUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.dot(a, b);\n\n    if (dot < -0.999999) {\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__.cross(tmpvec3, xUnitVec3, a);\n      if (_vec3_js__WEBPACK_IMPORTED_MODULE_2__.len(tmpvec3) < 0.000001) _vec3_js__WEBPACK_IMPORTED_MODULE_2__.cross(tmpvec3, yUnitVec3, a);\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nvar setAxes = function () {\n  var matr = _mat3_js__WEBPACK_IMPORTED_MODULE_3__.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/quat.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec2.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec2.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"ceil\": () => (/* binding */ ceil),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"scaleAndAdd\": () => (/* binding */ scaleAndAdd),\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"squaredDistance\": () => (/* binding */ squaredDistance),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"cross\": () => (/* binding */ cross),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"transformMat2\": () => (/* binding */ transformMat2),\n/* harmony export */   \"transformMat2d\": () => (/* binding */ transformMat2d),\n/* harmony export */   \"transformMat3\": () => (/* binding */ transformMat3),\n/* harmony export */   \"transformMat4\": () => (/* binding */ transformMat4),\n/* harmony export */   \"rotate\": () => (/* binding */ rotate),\n/* harmony export */   \"angle\": () => (/* binding */ angle),\n/* harmony export */   \"zero\": () => (/* binding */ zero),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"dist\": () => (/* binding */ dist),\n/* harmony export */   \"sqrDist\": () => (/* binding */ sqrDist),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"forEach\": () => (/* binding */ forEach)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(2);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nfunction fromValues(x, y) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nvar len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nvar sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nvar div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nvar dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/vec2.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec3.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec3.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"ceil\": () => (/* binding */ ceil),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"scaleAndAdd\": () => (/* binding */ scaleAndAdd),\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"squaredDistance\": () => (/* binding */ squaredDistance),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"cross\": () => (/* binding */ cross),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"hermite\": () => (/* binding */ hermite),\n/* harmony export */   \"bezier\": () => (/* binding */ bezier),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"transformMat4\": () => (/* binding */ transformMat4),\n/* harmony export */   \"transformMat3\": () => (/* binding */ transformMat3),\n/* harmony export */   \"transformQuat\": () => (/* binding */ transformQuat),\n/* harmony export */   \"rotateX\": () => (/* binding */ rotateX),\n/* harmony export */   \"rotateY\": () => (/* binding */ rotateY),\n/* harmony export */   \"rotateZ\": () => (/* binding */ rotateZ),\n/* harmony export */   \"angle\": () => (/* binding */ angle),\n/* harmony export */   \"zero\": () => (/* binding */ zero),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"dist\": () => (/* binding */ dist),\n/* harmony export */   \"sqrDist\": () => (/* binding */ sqrDist),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"forEach\": () => (/* binding */ forEach)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nfunction fromValues(x, y, z) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 * Math.PI;\n  var z = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nvar sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nvar div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nvar dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nvar len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/vec3.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec4.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec4.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"ceil\": () => (/* binding */ ceil),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"scaleAndAdd\": () => (/* binding */ scaleAndAdd),\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"squaredDistance\": () => (/* binding */ squaredDistance),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"cross\": () => (/* binding */ cross),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"transformMat4\": () => (/* binding */ transformMat4),\n/* harmony export */   \"transformQuat\": () => (/* binding */ transformQuat),\n/* harmony export */   \"zero\": () => (/* binding */ zero),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"dist\": () => (/* binding */ dist),\n/* harmony export */   \"sqrDist\": () => (/* binding */ sqrDist),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"forEach\": () => (/* binding */ forEach)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nfunction fromValues(x, y, z, w) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    v2 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    v4 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nvar sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nvar div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nvar dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nvar len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack:///./node_modules/gl-matrix/esm/vec4.js?");

/***/ }),

/***/ "./src/core/components/material/shader/default.vs":
/*!********************************************************!*\
  !*** ./src/core/components/material/shader/default.vs ***!
  \********************************************************/
/***/ ((module) => {

eval("module.exports = \"attribute vec4 aVertexPosition;\\r\\nattribute vec3 aVertexNormal;\\r\\nattribute vec2 aVertexUv;\\r\\n\\r\\nuniform mat4 uWorldMatrix;\\r\\nuniform mat4 uViewMatrix;\\r\\nuniform mat4 uProjectionMatrix;\\r\\n\\r\\nvarying vec3 vVertexNormal;\\r\\nvarying vec2 vVertexUv;\\r\\nvarying vec3 vVertexPosition;\\r\\n\\r\\nvoid main() {\\r\\n  mat4 modelViewMatrix = uViewMatrix * uWorldMatrix;\\r\\n  gl_Position = uProjectionMatrix * modelViewMatrix * aVertexPosition;\\r\\n\\r\\n  vVertexPosition = aVertexPosition.xyz;\\r\\n  vVertexNormal = mat3(uWorldMatrix) * aVertexNormal;\\r\\n  vVertexUv = aVertexUv;\\r\\n}\"\n\n//# sourceURL=webpack:///./src/core/components/material/shader/default.vs?");

/***/ }),

/***/ "./src/core/components/material/shader/fresnel.fs":
/*!********************************************************!*\
  !*** ./src/core/components/material/shader/fresnel.fs ***!
  \********************************************************/
/***/ ((module) => {

eval("module.exports = \"precision highp float;\\r\\n\\r\\nuniform vec3 uColor;\\r\\nuniform vec3 uLightDir;\\r\\nuniform vec3 uViewDir;\\r\\nuniform float uAmbientLight;\\r\\n\\r\\nvarying vec3 vVertexNormal;\\r\\n\\r\\nvoid main() {\\r\\n  float lumaIntensity = dot(vVertexNormal, uLightDir);\\r\\n  float rimIntensity = pow(clamp(1.0 + dot(vVertexNormal, uViewDir), 0.0, 1.0), 8.0);\\r\\n  float specularIntensity = pow(clamp(dot(reflect(uLightDir, vVertexNormal), uViewDir), 0.0, 1.0), 4.0);\\r\\n  \\r\\n  float intensity = max(uAmbientLight, max(lumaIntensity, specularIntensity)) + rimIntensity;\\r\\n\\r\\n  gl_FragColor = vec4(uColor * intensity, 1.0);\\r\\n}\"\n\n//# sourceURL=webpack:///./src/core/components/material/shader/fresnel.fs?");

/***/ }),

/***/ "./src/core/components/material/shader/lambert.fs":
/*!********************************************************!*\
  !*** ./src/core/components/material/shader/lambert.fs ***!
  \********************************************************/
/***/ ((module) => {

eval("module.exports = \"precision highp float;\\r\\n\\r\\nuniform vec3 uLightDir;\\r\\nuniform float uAmbientLight;\\r\\nuniform vec3 uColor;\\r\\n\\r\\nvarying vec3 vVertexNormal;\\r\\n\\r\\nvoid main() {\\r\\n  float lumaIntensity = dot(vVertexNormal, uLightDir);\\r\\n  gl_FragColor = vec4(uColor, 1.0);\\r\\n  gl_FragColor.rgb *= max(uAmbientLight, lumaIntensity);\\r\\n}\"\n\n//# sourceURL=webpack:///./src/core/components/material/shader/lambert.fs?");

/***/ }),

/***/ "./src/core/components/material/shader/terrain.fs":
/*!********************************************************!*\
  !*** ./src/core/components/material/shader/terrain.fs ***!
  \********************************************************/
/***/ ((module) => {

eval("module.exports = \"precision highp float;\\r\\n\\r\\nuniform vec3 uLightDir;\\r\\nuniform float uAmbientLight;\\r\\n\\r\\nvarying vec4 vVertexNormal;\\r\\nvarying vec2 vUvPosition;\\r\\n\\r\\nuniform sampler2D uTerrain;\\r\\n\\r\\nvec4 GREEN = vec4(0.419,0.608,0.117,1.0);\\r\\nvec4 LIGHT_GREEN = vec4(0.725,0.850,0.502,1.0);  \\r\\nvec4 BROWN = vec4(0.553,0.431,0.338,1.0);\\r\\nvec4 WHITE = vec4(1.0,1.0,1.0,1.0);\\r\\n\\r\\nfloat STEEPNESS_THRESHOLD = 0.425;\\r\\nfloat SNOW_THRESHOLD = 0.6;\\r\\n\\r\\nvec3 UP_VECTOR = vec3(0.0, 1.0, 0.0);\\r\\n\\r\\nvoid main() {\\r\\n  float height = vVertexNormal.w;\\r\\n\\r\\n  vec3 normal = vVertexNormal.xyz;\\r\\n  float steepness = dot(normal, UP_VECTOR);\\r\\n\\r\\n  float steepnessMask = step(STEEPNESS_THRESHOLD, steepness);\\r\\n  float snowMask = step(SNOW_THRESHOLD, height);\\r\\n\\r\\n  vec4 terrain = texture2D(uTerrain, vUvPosition * 250.0);\\r\\n\\r\\n  vec4 grass = steepnessMask * (1.0 - snowMask) * mix(GREEN, LIGHT_GREEN, height) * terrain.g;\\r\\n  vec4 cliff =  (1.0 - steepnessMask) * mix(BROWN, WHITE, height) * terrain.r;\\r\\n  vec4 snow = snowMask * steepnessMask * WHITE * terrain.b;\\r\\n\\r\\n  vec4 color = grass + cliff + snow;\\r\\n  color.xyz *= dot(uLightDir, normal);\\r\\n\\r\\n  gl_FragColor = color;\\r\\n}\"\n\n//# sourceURL=webpack:///./src/core/components/material/shader/terrain.fs?");

/***/ }),

/***/ "./src/core/components/material/shader/terrain.vs":
/*!********************************************************!*\
  !*** ./src/core/components/material/shader/terrain.vs ***!
  \********************************************************/
/***/ ((module) => {

eval("module.exports = \"attribute vec4 aVertexPosition;\\r\\nattribute vec3 aVertexNormal;\\r\\n\\r\\nuniform mat4 uOffsetMatrix;\\r\\n\\r\\nvarying vec2 vUvPosition;\\r\\nvarying vec4 vVertexNormal;\\r\\n\\r\\nuniform sampler2D uHeightmap;\\r\\nuniform float uHeight;\\r\\n\\r\\nuniform mat4 uWorldMatrix;\\r\\nuniform mat4 uViewMatrix;\\r\\nuniform mat4 uProjectionMatrix;\\r\\n\\r\\nvoid main() {\\r\\n  vUvPosition = (uOffsetMatrix * aVertexPosition).xz + vec2(2.0, 2.0);\\r\\n  vVertexNormal = texture2D(uHeightmap, vUvPosition);\\r\\n  \\r\\n  vec4 position = vec4(aVertexPosition.x, aVertexPosition.y + vVertexNormal.w * uHeight, aVertexPosition.z, aVertexPosition.w);\\r\\n  gl_Position = uProjectionMatrix * uViewMatrix * uWorldMatrix * position;  \\r\\n}\"\n\n//# sourceURL=webpack:///./src/core/components/material/shader/terrain.vs?");

/***/ }),

/***/ "./src/core/components/material/shader/unlit.fs":
/*!******************************************************!*\
  !*** ./src/core/components/material/shader/unlit.fs ***!
  \******************************************************/
/***/ ((module) => {

eval("module.exports = \"precision highp float;\\r\\n\\r\\nuniform vec3 uColor;\\r\\n\\r\\nvoid main() {\\r\\n  gl_FragColor = vec4(uColor, 1.0);\\r\\n}\"\n\n//# sourceURL=webpack:///./src/core/components/material/shader/unlit.fs?");

/***/ }),

/***/ "./src/core/components/base/camera.ts":
/*!********************************************!*\
  !*** ./src/core/components/base/camera.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Camera)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/quat.js\");\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./src/core/components/base/component.ts\");\n/* harmony import */ var _util_math_frustrum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../util/math/frustrum */ \"./src/util/math/frustrum.ts\");\n/* harmony import */ var _scene_entity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scene/entity */ \"./src/core/scene/entity.ts\");\n/* harmony import */ var _util_math_plane__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../util/math/plane */ \"./src/util/math/plane.ts\");\n/* harmony import */ var _material_unlitMaterial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../material/unlitMaterial */ \"./src/core/components/material/unlitMaterial.ts\");\n/* harmony import */ var _geometry_quad__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../geometry/quad */ \"./src/core/components/geometry/quad.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DEFAULT_Z_NEAR = 0.05;\r\nconst DEFAULT_Z_FAR = 10000.0;\r\nconst VECTOR_FORWARD = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.fromValues(0.0, 0.0, -1.0);\r\nconst VECTOR_UP = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.fromValues(0.0, 1.0, 0.0);\r\nclass Camera {\r\n    constructor(fov, aspect) {\r\n        this.updateProjection = (fov, aspect) => {\r\n            this.fov = fov;\r\n            this.aspect = aspect;\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_7__.perspective(this.projectionMatrix, this.fov, this.aspect, DEFAULT_Z_NEAR, DEFAULT_Z_FAR);\r\n            this.updateFrustrum();\r\n        };\r\n        this.isPointInFrustrum = (point) => {\r\n            for (const plane of this.frustrum.planes)\r\n                if (!this.isPointInFront(plane, point))\r\n                    return false;\r\n            return true;\r\n        };\r\n        this.isPointInFront = (plane, point, radius = 0.0) => {\r\n            if (gl_matrix__WEBPACK_IMPORTED_MODULE_6__.dot(point, plane.normal) + plane.distance + radius < 0.0)\r\n                return false;\r\n            return true;\r\n        };\r\n        this.isSphereInFrustrum = (point, radius) => {\r\n            for (const plane of this.frustrum.planes)\r\n                if (!this.isPointInFront(plane, point, radius))\r\n                    return false;\r\n            return true;\r\n        };\r\n        this.isBoxInFrustrum = (corners, globalMatrix) => {\r\n            // ToDo(Eric) Cache this in geometry / bounding box component after transform was diry\r\n            let points = new Array();\r\n            // ToDo: Cache this!\r\n            corners.forEach(corner => {\r\n                points.push(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.transformMat4(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), corner, globalMatrix));\r\n            });\r\n            for (const plane of this.frustrum.planes) {\r\n                let inPointCount = 0;\r\n                let outPointCount = 0;\r\n                for (let pointIndex = 0; pointIndex < 8 && (inPointCount == 0 || outPointCount == 0); pointIndex++)\r\n                    this.isPointInFront(plane, points[pointIndex]) ? inPointCount++ : outPointCount++;\r\n                if (!inPointCount)\r\n                    return false;\r\n            }\r\n            return true;\r\n        };\r\n        this.isEntityInFrustrum = (entity) => {\r\n            const geometry = entity.get(_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.GEOMETRY);\r\n            if (!this.frustrum || !(geometry === null || geometry === void 0 ? void 0 : geometry.visible))\r\n                return false;\r\n            if (!geometry.cull)\r\n                return true;\r\n            let isInFrustrum = null;\r\n            const point = entity.get(_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM).getGlobalPosition();\r\n            // ToDo: Abstract bounding volumes with base class and type to improve component query and code flow\r\n            const boundingVolume = entity.get(_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.BOUNDING_VOLUME);\r\n            if (boundingVolume.radius) {\r\n                const scale = entity.get(_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM).getGlobalScale();\r\n                // ToDo: Chache this!\r\n                const radiusScalar = Math.max(scale[0], Math.max(scale[1], scale[2]));\r\n                isInFrustrum = this.isSphereInFrustrum(point, boundingVolume.radius * radiusScalar);\r\n            }\r\n            if (boundingVolume.corners) {\r\n                const globalMatrix = entity.get(_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM).globalMatrix;\r\n                isInFrustrum = this.isBoxInFrustrum(boundingVolume.corners, globalMatrix);\r\n            }\r\n            if (isInFrustrum === null)\r\n                isInFrustrum = this.isPointInFrustrum(point);\r\n            return isInFrustrum;\r\n        };\r\n        this.updateFrustrum = () => {\r\n            // ToDo: Optimize this!\r\n            const position = this.self.get(_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM).getGlobalPosition();\r\n            // see: http://www.lighthouse3d.com/tutorials/view-frustum-culling/geometric-approach-extracting-the-planes/\r\n            // NEAR PLANE CONSTRUCTION\r\n            const hNear = -2.0 * Math.tan(this.fov * 0.5) * DEFAULT_Z_NEAR;\r\n            const wNear = hNear * this.aspect;\r\n            /*\r\n            console.log(\"height near =\", hNear)\r\n            console.log(\"width near =\", wNear)\r\n            */\r\n            const nearUpOffset = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.scale(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), this.up, hNear * 0.5);\r\n            const nearSideOffset = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.scale(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), this.side, wNear * 0.5);\r\n            const nearCenter = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.scaleAndAdd(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), position, this.viewDir, DEFAULT_Z_NEAR);\r\n            /*\r\n            console.log(\"near up offset =\", nearUpOffset.toString())\r\n            console.log(\"near side offset =\", nearSideOffset.toString())\r\n            console.log(\"near center =\", nearCenter.toString())\r\n            */\r\n            const nearBottomLeft = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), nearCenter, gl_matrix__WEBPACK_IMPORTED_MODULE_6__.add(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), nearUpOffset, nearSideOffset));\r\n            const nearTopLeft = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.add(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), nearCenter, gl_matrix__WEBPACK_IMPORTED_MODULE_6__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), nearUpOffset, nearSideOffset));\r\n            const nearTopRight = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.add(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), nearCenter, gl_matrix__WEBPACK_IMPORTED_MODULE_6__.add(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), nearUpOffset, nearSideOffset));\r\n            const nearBottomRight = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), nearCenter, gl_matrix__WEBPACK_IMPORTED_MODULE_6__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), nearUpOffset, nearSideOffset));\r\n            /*\r\n            console.log(\"near bottom left =\", nearBottomLeft.toString())\r\n            console.log(\"near top left =\", nearTopLeft.toString())\r\n            console.log(\"near top right =\", nearTopRight.toString())\r\n            console.log(\"near bottom right =\", nearBottomRight.toString())\r\n            */\r\n            // FAR PLANE CONSTRUCTION\r\n            const hFar = -2.0 * Math.tan(this.fov * 0.5) * DEFAULT_Z_FAR;\r\n            const wFar = hFar * this.aspect;\r\n            /*\r\n            console.log(\"height far =\", hFar)\r\n            console.log(\"width far =\", wFar)\r\n            */\r\n            const farUpOffset = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.scale(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), this.up, hFar * 0.5);\r\n            const farSideOffset = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.scale(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), this.side, wFar * 0.5);\r\n            const farCenter = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.scaleAndAdd(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), position, this.viewDir, DEFAULT_Z_FAR);\r\n            /*\r\n            console.log(\"far up offset =\", farUpOffset.toString())\r\n            console.log(\"far side offset =\", farSideOffset.toString())\r\n            console.log(\"far center =\", farCenter.toString())\r\n            */\r\n            const farBottomLeft = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), farCenter, gl_matrix__WEBPACK_IMPORTED_MODULE_6__.add(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), farUpOffset, farSideOffset));\r\n            const farTopLeft = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.add(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), farCenter, gl_matrix__WEBPACK_IMPORTED_MODULE_6__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), farUpOffset, farSideOffset));\r\n            const farTopRight = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.add(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), farCenter, gl_matrix__WEBPACK_IMPORTED_MODULE_6__.add(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), farUpOffset, farSideOffset));\r\n            const farBottomRight = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), farCenter, gl_matrix__WEBPACK_IMPORTED_MODULE_6__.sub(gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create(), farUpOffset, farSideOffset));\r\n            /*\r\n            console.log(\"far bottom left =\", farBottomLeft.toString())\r\n            console.log(\"far top left =\", farTopLeft.toString())\r\n            console.log(\"far top right =\", farTopRight.toString())\r\n            console.log(\"far bottom right =\", farBottomRight.toString())\r\n            */\r\n            // PLANE CONSTRUCTION\r\n            this.frustrum.planes[_util_math_frustrum__WEBPACK_IMPORTED_MODULE_1__.PlaneIndex.NEAR] = (0,_util_math_plane__WEBPACK_IMPORTED_MODULE_3__.createPlaneFromPoints)(nearBottomLeft, nearTopLeft, nearTopRight);\r\n            this.frustrum.planes[_util_math_frustrum__WEBPACK_IMPORTED_MODULE_1__.PlaneIndex.FAR] = (0,_util_math_plane__WEBPACK_IMPORTED_MODULE_3__.createPlaneFromPoints)(farBottomRight, farTopRight, farTopLeft);\r\n            this.frustrum.planes[_util_math_frustrum__WEBPACK_IMPORTED_MODULE_1__.PlaneIndex.LEFT] = (0,_util_math_plane__WEBPACK_IMPORTED_MODULE_3__.createPlaneFromPoints)(farBottomLeft, farTopLeft, nearTopLeft);\r\n            this.frustrum.planes[_util_math_frustrum__WEBPACK_IMPORTED_MODULE_1__.PlaneIndex.RIGHT] = (0,_util_math_plane__WEBPACK_IMPORTED_MODULE_3__.createPlaneFromPoints)(nearBottomRight, nearTopRight, farTopRight);\r\n            this.frustrum.planes[_util_math_frustrum__WEBPACK_IMPORTED_MODULE_1__.PlaneIndex.TOP] = (0,_util_math_plane__WEBPACK_IMPORTED_MODULE_3__.createPlaneFromPoints)(nearTopLeft, farTopLeft, farTopRight);\r\n            this.frustrum.planes[_util_math_frustrum__WEBPACK_IMPORTED_MODULE_1__.PlaneIndex.BOTTOM] = (0,_util_math_plane__WEBPACK_IMPORTED_MODULE_3__.createPlaneFromPoints)(farBottomLeft, nearBottomLeft, nearBottomRight);\r\n            /*\r\n            console.log(\"near =\", this.frustrum.planes[PlaneIndex.NEAR].normal.toString(), this.frustrum.planes[PlaneIndex.NEAR].distance)\r\n            console.log(\"far =\", this.frustrum.planes[PlaneIndex.FAR].normal.toString(), this.frustrum.planes[PlaneIndex.FAR].distance)\r\n            console.log(\"left =\", this.frustrum.planes[PlaneIndex.LEFT].normal.toString(), this.frustrum.planes[PlaneIndex.LEFT].distance)\r\n            console.log(\"right =\", this.frustrum.planes[PlaneIndex.RIGHT].normal.toString(), this.frustrum.planes[PlaneIndex.RIGHT].distance)\r\n            console.log(\"top =\", this.frustrum.planes[PlaneIndex.TOP].normal.toString(), this.frustrum.planes[PlaneIndex.TOP].distance)\r\n            console.log(\"bottom =\", this.frustrum.planes[PlaneIndex.BOTTOM].normal.toString(), this.frustrum.planes[PlaneIndex.BOTTOM].distance)\r\n            */\r\n            this.frustrum.positions.push(nearBottomLeft, nearTopLeft, nearTopRight, nearBottomRight);\r\n            this.frustrum.positions.push(farBottomLeft, farTopLeft, farTopRight, farBottomRight);\r\n            this.frustrum.positions.push(farBottomLeft, farTopLeft, nearTopLeft, nearBottomLeft);\r\n            this.frustrum.positions.push(nearBottomRight, nearTopRight, farTopRight, farBottomRight);\r\n            this.frustrum.positions.push(nearTopLeft, farTopLeft, farTopRight, nearTopRight);\r\n            this.frustrum.positions.push(farBottomLeft, farBottomRight, nearBottomRight, nearBottomLeft);\r\n        };\r\n        this.onAdd = (self) => {\r\n            this.self = self;\r\n            this.updateProjection(this.fov, this.aspect);\r\n            const debugMaterial = new _material_unlitMaterial__WEBPACK_IMPORTED_MODULE_4__[\"default\"]([0.0, 1.0, 1.0]);\r\n            for (let posIndex = 0; posIndex < this.frustrum.positions.length; posIndex += 4) {\r\n                const frustrumPlane = new _scene_entity__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n                const positions = this.frustrum.positions.slice(posIndex, posIndex + 4);\r\n                frustrumPlane.add(new _geometry_quad__WEBPACK_IMPORTED_MODULE_5__[\"default\"](positions, false, false, false));\r\n                frustrumPlane.add(debugMaterial);\r\n                this.self.get(_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM).add(frustrumPlane);\r\n            }\r\n        };\r\n        this.onUpdate = (self, camera) => {\r\n            const globalMatrix = self.get(_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM).globalMatrix;\r\n            this.viewMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_7__.invert(gl_matrix__WEBPACK_IMPORTED_MODULE_7__.create(), globalMatrix);\r\n            const rotation = gl_matrix__WEBPACK_IMPORTED_MODULE_7__.getRotation(gl_matrix__WEBPACK_IMPORTED_MODULE_8__.create(), globalMatrix);\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_6__.transformQuat(this.viewDir, VECTOR_FORWARD, rotation);\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_6__.cross(this.side, VECTOR_UP, this.viewDir);\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_6__.cross(this.up, this.side, this.viewDir);\r\n            this.updateFrustrum();\r\n        };\r\n        this.type = _component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.CAMERA;\r\n        this.projectionMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_7__.create();\r\n        this.viewMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_7__.create();\r\n        this.frustrum = (0,_util_math_frustrum__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\r\n        this.viewDir = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.fromValues(0.0, 0.0, -1.0);\r\n        this.up = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.fromValues(0.0, 1.0, 0.0);\r\n        this.side = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.fromValues(1.0, 0.0, 0.0);\r\n        this.fov = fov;\r\n        this.aspect = aspect;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/base/camera.ts?");

/***/ }),

/***/ "./src/core/components/base/component.ts":
/*!***********************************************!*\
  !*** ./src/core/components/base/component.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComponentEnum\": () => (/* binding */ ComponentEnum)\n/* harmony export */ });\nvar ComponentEnum;\r\n(function (ComponentEnum) {\r\n    ComponentEnum[ComponentEnum[\"TRANSFORM\"] = 0] = \"TRANSFORM\";\r\n    ComponentEnum[ComponentEnum[\"GEOMETRY\"] = 1] = \"GEOMETRY\";\r\n    ComponentEnum[ComponentEnum[\"BOUNDING_VOLUME\"] = 2] = \"BOUNDING_VOLUME\";\r\n    ComponentEnum[ComponentEnum[\"MATERIAL\"] = 3] = \"MATERIAL\";\r\n    ComponentEnum[ComponentEnum[\"CAMERA\"] = 4] = \"CAMERA\";\r\n    ComponentEnum[ComponentEnum[\"TERRAIN\"] = 5] = \"TERRAIN\";\r\n    ComponentEnum[ComponentEnum[\"CONTROLS\"] = 6] = \"CONTROLS\";\r\n    ComponentEnum[ComponentEnum[\"SCRIPT\"] = 7] = \"SCRIPT\";\r\n})(ComponentEnum || (ComponentEnum = {}));\r\n\n\n//# sourceURL=webpack:///./src/core/components/base/component.ts?");

/***/ }),

/***/ "./src/core/components/base/transform.ts":
/*!***********************************************!*\
  !*** ./src/core/components/base/transform.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Transform)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/quat.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./component */ \"./src/core/components/base/component.ts\");\n\r\n\r\nclass Transform {\r\n    constructor() {\r\n        this.setLocalPosition = (position) => {\r\n            this.localPosition = position;\r\n            this.dirty = true;\r\n        };\r\n        this.setLocalEulerRotation = (rotation) => {\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_1__.fromEuler(this.localRotation, rotation[0], rotation[1], rotation[2]);\r\n            this.dirty = true;\r\n        };\r\n        this.setLocalScale = (scale) => {\r\n            this.localScale = scale;\r\n            this.dirty = true;\r\n        };\r\n        this.getGlobalPosition = () => {\r\n            return gl_matrix__WEBPACK_IMPORTED_MODULE_2__.getTranslation(gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create(), this.globalMatrix);\r\n        };\r\n        this.getGlobalRotation = () => {\r\n            return gl_matrix__WEBPACK_IMPORTED_MODULE_2__.getRotation(gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create(), this.globalMatrix);\r\n        };\r\n        this.getGlobalScale = () => {\r\n            return gl_matrix__WEBPACK_IMPORTED_MODULE_2__.getScaling(gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create(), this.globalMatrix);\r\n        };\r\n        this.add = (entity) => {\r\n            entity.get(_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM).parent = this;\r\n            this.children.push(entity);\r\n        };\r\n        this.removeChild = (entity) => {\r\n            // ToDo: Improve Error handling\r\n            const entityIndex = this.children.indexOf(entity);\r\n            if (!entityIndex)\r\n                return;\r\n            this.children.splice(entityIndex, 1);\r\n        };\r\n        this.onUpdate = () => {\r\n            if (this.dirty) {\r\n                this.localMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.translate(this.localMatrix, this.localMatrix, this.localPosition);\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.scale(this.localMatrix, this.localMatrix, this.localScale);\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromQuat(this.localRotationMatrix, this.localRotation);\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_2__.multiply(this.localMatrix, this.localMatrix, this.localRotationMatrix);\r\n            }\r\n            if (this.parent)\r\n                this.globalMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.multiply(this.globalMatrix, this.parent.globalMatrix, this.localMatrix);\r\n            else if (this.dirty)\r\n                this.globalMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.clone(this.localMatrix);\r\n            this.dirty = false;\r\n        };\r\n        this.type = _component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM;\r\n        this.localPosition = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create();\r\n        this.localRotation = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n        this.localScale = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create();\r\n        this.localScale.fill(1.0);\r\n        this.dirty = true;\r\n        this.localRotationMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        this.localMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        this.globalMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        this.parent = null;\r\n        this.children = new Array();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/base/transform.ts?");

/***/ }),

/***/ "./src/core/components/boundingVolume/boundingBox.ts":
/*!***********************************************************!*\
  !*** ./src/core/components/boundingVolume/boundingBox.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BoundingBox)\n/* harmony export */ });\n/* harmony import */ var _internal_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../internal/debug */ \"./src/core/internal/debug.ts\");\n/* harmony import */ var _scene_entity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../scene/entity */ \"./src/core/scene/entity.ts\");\n/* harmony import */ var _base_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/component */ \"./src/core/components/base/component.ts\");\n/* harmony import */ var _geometry_geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../geometry/geometry */ \"./src/core/components/geometry/geometry.ts\");\n/* harmony import */ var _boundingVolume__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./boundingVolume */ \"./src/core/components/boundingVolume/boundingVolume.ts\");\n\r\n\r\n\r\n\r\n\r\nclass BoundingBox extends _boundingVolume__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\r\n    constructor(visible = false) {\r\n        super(visible);\r\n        this.setVisible = (visible) => {\r\n            this.visible = visible;\r\n            this.createBox();\r\n            const geometry = this.box.get(_base_component__WEBPACK_IMPORTED_MODULE_2__.ComponentEnum.GEOMETRY);\r\n            geometry.visible = visible;\r\n        };\r\n        this.createBoxBuffer = (min, max) => {\r\n            const positions = new Array();\r\n            // order clockwise from view outside\r\n            // front\r\n            positions.push(min[0], min[1], max[2]);\r\n            positions.push(min[0], max[1], max[2]);\r\n            positions.push(min[0], max[1], max[2]);\r\n            positions.push(max[0], max[1], max[2]);\r\n            positions.push(max[0], max[1], max[2]);\r\n            positions.push(max[0], min[1], max[2]);\r\n            positions.push(max[0], min[1], max[2]);\r\n            positions.push(min[0], min[1], max[2]);\r\n            // back\r\n            positions.push(max[0], min[1], min[2]);\r\n            positions.push(max[0], max[1], min[2]);\r\n            positions.push(max[0], max[1], min[2]);\r\n            positions.push(min[0], max[1], min[2]);\r\n            positions.push(min[0], max[1], min[2]);\r\n            positions.push(min[0], min[1], min[2]);\r\n            positions.push(min[0], min[1], min[2]);\r\n            positions.push(max[0], min[1], min[2]);\r\n            // left\r\n            positions.push(min[0], max[1], min[2]);\r\n            positions.push(min[0], max[1], max[2]);\r\n            positions.push(min[0], min[1], min[2]);\r\n            positions.push(min[0], min[1], max[2]);\r\n            // right\r\n            positions.push(max[0], max[1], min[2]);\r\n            positions.push(max[0], max[1], max[2]);\r\n            positions.push(max[0], min[1], min[2]);\r\n            positions.push(max[0], min[1], max[2]);\r\n            return new Float32Array(positions);\r\n        };\r\n        this.createBox = () => {\r\n            if (!this.visible || this.box || !this.self)\r\n                return false;\r\n            this.box = new _scene_entity__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n            const boxGeometry = new _geometry_geometry__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_geometry_geometry__WEBPACK_IMPORTED_MODULE_3__.DrawMode.LINE, true, false, false);\r\n            const positions = this.createBoxBuffer(this.min, this.max);\r\n            boxGeometry.setVertices({\r\n                position: positions\r\n            });\r\n            this.box.add(boxGeometry);\r\n            this.box.add(_internal_debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"].material);\r\n            this.self.get(_base_component__WEBPACK_IMPORTED_MODULE_2__.ComponentEnum.TRANSFORM).add(this.box);\r\n            return true;\r\n        };\r\n        this.onAdd = (self) => {\r\n            this.self = self;\r\n            const geometry = self.get(_base_component__WEBPACK_IMPORTED_MODULE_2__.ComponentEnum.GEOMETRY);\r\n            this.min = geometry.vertex.min;\r\n            this.max = geometry.vertex.max;\r\n            this.corners.push([this.min[0], this.min[1], this.min[2]]);\r\n            this.corners.push([this.max[0], this.min[1], this.min[2]]);\r\n            this.corners.push([this.min[0], this.max[1], this.min[2]]);\r\n            this.corners.push([this.min[0], this.min[1], this.max[2]]);\r\n            this.corners.push([this.max[0], this.max[1], this.min[2]]);\r\n            this.corners.push([this.min[0], this.max[1], this.max[2]]);\r\n            this.corners.push([this.max[0], this.min[1], this.max[2]]);\r\n            this.corners.push([this.max[0], this.max[1], this.max[2]]);\r\n            this.createBox();\r\n        };\r\n        this.corners = new Array();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/boundingVolume/boundingBox.ts?");

/***/ }),

/***/ "./src/core/components/boundingVolume/boundingSphere.ts":
/*!**************************************************************!*\
  !*** ./src/core/components/boundingVolume/boundingSphere.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BoundingSphere)\n/* harmony export */ });\n/* harmony import */ var _scene_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../scene/entity */ \"./src/core/scene/entity.ts\");\n/* harmony import */ var _boundingVolume__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boundingVolume */ \"./src/core/components/boundingVolume/boundingVolume.ts\");\n/* harmony import */ var _geometry_geometry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geometry/geometry */ \"./src/core/components/geometry/geometry.ts\");\n/* harmony import */ var _material_unlitMaterial__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../material/unlitMaterial */ \"./src/core/components/material/unlitMaterial.ts\");\n/* harmony import */ var _base_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../base/component */ \"./src/core/components/base/component.ts\");\n\r\n\r\n\r\n\r\n\r\nclass BoundingSphere extends _boundingVolume__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\r\n    constructor(visible = false) {\r\n        super(visible);\r\n        this.setVisible = (visible) => {\r\n            this.visible = visible;\r\n            this.createSphere();\r\n            const geometry = this.sphere.get(_base_component__WEBPACK_IMPORTED_MODULE_4__.ComponentEnum.GEOMETRY);\r\n            geometry.visible = visible;\r\n        };\r\n        this.createSphereBuffer = (radius) => {\r\n            const positions = new Array();\r\n            const UNIT_CIRCUMFERENCE = 2 * Math.PI;\r\n            const SECTIONS = 32;\r\n            const step = UNIT_CIRCUMFERENCE / SECTIONS;\r\n            // tmp => offset entity transform?\r\n            const yOffset = (this.max[1] + this.min[1]) * 0.5;\r\n            for (let radiant = 0.0; radiant < UNIT_CIRCUMFERENCE; radiant += step) {\r\n                const pos1 = Math.cos(radiant) * radius;\r\n                const pos2 = Math.sin(radiant) * radius;\r\n                const pos3 = Math.cos(radiant + step) * radius;\r\n                const pos4 = Math.sin(radiant + step) * radius;\r\n                positions.push(pos1, pos2 + yOffset, 0.0);\r\n                positions.push(pos3, pos4 + yOffset, 0.0);\r\n                positions.push(0.0, pos1 + yOffset, pos2);\r\n                positions.push(0.0, pos3 + yOffset, pos4);\r\n                positions.push(pos1, yOffset, pos2);\r\n                positions.push(pos3, yOffset, pos4);\r\n            }\r\n            return new Float32Array(positions);\r\n        };\r\n        this.createSphere = () => {\r\n            if (!this.visible || this.sphere || !this.self)\r\n                return false;\r\n            const sphereGeometry = new _geometry_geometry__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_geometry_geometry__WEBPACK_IMPORTED_MODULE_2__.DrawMode.LINE, true, false, false);\r\n            const positions = this.createSphereBuffer(this.radius);\r\n            sphereGeometry.setVertices({\r\n                position: positions\r\n            });\r\n            this.sphere = new _scene_entity__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n            this.sphere.add(sphereGeometry);\r\n            this.sphere.add(new _material_unlitMaterial__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([1.0, 0.0, 1.0]));\r\n            this.self.get(_base_component__WEBPACK_IMPORTED_MODULE_4__.ComponentEnum.TRANSFORM).add(this.sphere);\r\n            return true;\r\n        };\r\n        this.onAdd = (self) => {\r\n            this.self = self;\r\n            const geometry = self.get(_base_component__WEBPACK_IMPORTED_MODULE_4__.ComponentEnum.GEOMETRY);\r\n            this.min = geometry.vertex.min;\r\n            this.max = geometry.vertex.max;\r\n            const distanceX = this.max[0] - this.min[0];\r\n            const distanceY = this.max[1] - this.min[1];\r\n            const distanceZ = this.max[2] - this.min[2];\r\n            this.radius = Math.max(distanceX, Math.max(distanceY, distanceZ)) * 0.5;\r\n            this.createSphere();\r\n        };\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/boundingVolume/boundingSphere.ts?");

/***/ }),

/***/ "./src/core/components/boundingVolume/boundingVolume.ts":
/*!**************************************************************!*\
  !*** ./src/core/components/boundingVolume/boundingVolume.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BoundingVolume)\n/* harmony export */ });\n/* harmony import */ var _base_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/component */ \"./src/core/components/base/component.ts\");\n\r\nclass BoundingVolume {\r\n    constructor(visible = false) {\r\n        this.type = _base_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.BOUNDING_VOLUME;\r\n        this.visible = visible;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/boundingVolume/boundingVolume.ts?");

/***/ }),

/***/ "./src/core/components/controls/flyControls.ts":
/*!*****************************************************!*\
  !*** ./src/core/components/controls/flyControls.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FlyControls)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec2.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/quat.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var _base_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/component */ \"./src/core/components/base/component.ts\");\n/* harmony import */ var _internal_input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/input */ \"./src/core/internal/input.ts\");\n/* harmony import */ var _internal_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/time */ \"./src/core/internal/time.ts\");\n/* harmony import */ var _util_math_clamp__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../util/math/clamp */ \"./src/util/math/clamp.ts\");\n\r\n\r\n\r\n\r\n\r\nconst VECTOR_UP = gl_matrix__WEBPACK_IMPORTED_MODULE_4__.fromValues(0.0, -1.0, 0.0);\r\nconst MAX_YAW_ANGEL = Math.PI * 0.45;\r\nconst ROTATE_SPEED = 150.0;\r\nconst TRANSLATE_SPEED = 14.0;\r\nconst TWO_PI = 2.0 * Math.PI;\r\nclass FlyControls {\r\n    constructor() {\r\n        this.onUpdate = (self, camera) => {\r\n            // ROTATION\r\n            // x: yaw, y: pitch\r\n            const deltaMousePosition = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.clone(_internal_input__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mouseState.deltaPosition);\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_5__.scale(deltaMousePosition, deltaMousePosition, -1.0);\r\n            const rotateSpeed = ROTATE_SPEED * _internal_time__WEBPACK_IMPORTED_MODULE_2__[\"default\"].deltaTime;\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_5__.copy(this.tmpAngleRotation, this.angleRotation);\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_5__.add(this.tmpAngleRotation, this.tmpAngleRotation, gl_matrix__WEBPACK_IMPORTED_MODULE_5__.scale(deltaMousePosition, deltaMousePosition, rotateSpeed));\r\n            if (this.tmpAngleRotation[1] > MAX_YAW_ANGEL)\r\n                this.tmpAngleRotation[1] = MAX_YAW_ANGEL;\r\n            if (this.tmpAngleRotation[1] < -MAX_YAW_ANGEL)\r\n                this.tmpAngleRotation[1] = -MAX_YAW_ANGEL;\r\n            this.tmpAngleRotation[0] = (0,_util_math_clamp__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.tmpAngleRotation[0], 0.0, TWO_PI);\r\n            // ToDo: Clamp rotation angle to 0 => two PI\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_5__.copy(this.angleRotation, this.tmpAngleRotation);\r\n            const rotation = gl_matrix__WEBPACK_IMPORTED_MODULE_6__.create();\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_6__.rotateY(rotation, rotation, this.angleRotation[0]);\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_6__.rotateX(rotation, rotation, this.angleRotation[1]);\r\n            // COORDINATE SYSTEM AXES\r\n            const forward = gl_matrix__WEBPACK_IMPORTED_MODULE_4__.transformQuat(gl_matrix__WEBPACK_IMPORTED_MODULE_4__.create(), gl_matrix__WEBPACK_IMPORTED_MODULE_4__.fromValues(0.0, 0.0, -1.0), rotation);\r\n            const side = gl_matrix__WEBPACK_IMPORTED_MODULE_4__.cross(gl_matrix__WEBPACK_IMPORTED_MODULE_4__.create(), forward, VECTOR_UP);\r\n            const up = gl_matrix__WEBPACK_IMPORTED_MODULE_4__.cross(gl_matrix__WEBPACK_IMPORTED_MODULE_4__.create(), forward, side);\r\n            // TRANSLATION\r\n            this.position = self.get(_base_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM).getGlobalPosition();\r\n            const translateSpeed = TRANSLATE_SPEED * _internal_time__WEBPACK_IMPORTED_MODULE_2__[\"default\"].deltaTime * (_internal_input__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isKeyDown('shift') ? 6.0 : 1.0);\r\n            const inputDirection = [_internal_input__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isKeyDown('a') ? 1.0 : _internal_input__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isKeyDown('d') ? -1.0 : 0.0,\r\n                _internal_input__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isKeyDown('e') ? 1.0 : _internal_input__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isKeyDown('q') ? -1.0 : 0.0,\r\n                _internal_input__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isKeyDown('w') ? 1.0 : _internal_input__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isKeyDown('s') ? -1.0 : 0.0];\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_4__.scaleAndAdd(this.position, this.position, side, inputDirection[0] * translateSpeed);\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_4__.scaleAndAdd(this.position, this.position, up, inputDirection[1] * translateSpeed);\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_4__.scaleAndAdd(this.position, this.position, forward, inputDirection[2] * translateSpeed);\r\n            // CONSTRUCT MATRIX\r\n            const rotationMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_7__.fromQuat(gl_matrix__WEBPACK_IMPORTED_MODULE_7__.create(), rotation);\r\n            const translationMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_7__.fromTranslation(gl_matrix__WEBPACK_IMPORTED_MODULE_7__.create(), this.position);\r\n            // UPDATE ENTITY TRANSFORM\r\n            self.get(_base_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM).globalMatrix = gl_matrix__WEBPACK_IMPORTED_MODULE_7__.mul(gl_matrix__WEBPACK_IMPORTED_MODULE_7__.create(), translationMatrix, rotationMatrix);\r\n        };\r\n        this.onAdd = (self) => {\r\n            this.position = self.get(_base_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM).position;\r\n        };\r\n        this.type = _base_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.CONTROLS;\r\n        this.angleRotation = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.create();\r\n        this.tmpAngleRotation = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.create();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/controls/flyControls.ts?");

/***/ }),

/***/ "./src/core/components/geometry/bone.ts":
/*!**********************************************!*\
  !*** ./src/core/components/geometry/bone.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Bone)\n/* harmony export */ });\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geometry */ \"./src/core/components/geometry/geometry.ts\");\n\r\nclass Bone extends _geometry__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(visible = true, cull = true, boundingVolume = true) {\r\n        super(_geometry__WEBPACK_IMPORTED_MODULE_0__.DrawMode.LINE, visible, cull, boundingVolume);\r\n        const positions = new Array();\r\n        positions.push(0, 0, 0);\r\n        positions.push(0.075, 0.2, 0.075);\r\n        positions.push(0.075, 0.2, 0.075);\r\n        positions.push(0.075, 0.2, -0.075);\r\n        positions.push(0.075, 0.2, -0.075);\r\n        positions.push(0, 0, 0);\r\n        positions.push(0, 0, 0);\r\n        positions.push(-0.075, 0.2, -0.075);\r\n        positions.push(-0.075, 0.2, -0.075);\r\n        positions.push(-0.075, 0.2, 0.075);\r\n        positions.push(-0.075, 0.2, 0.075);\r\n        positions.push(0, 0, 0);\r\n        positions.push(-0.075, 0.2, 0.075);\r\n        positions.push(0.075, 0.2, 0.075);\r\n        positions.push(0.075, 0.2, -0.075);\r\n        positions.push(-0.075, 0.2, -0.075);\r\n        positions.push(-0.075, 0.2, -0.075);\r\n        positions.push(0, 1, 0);\r\n        positions.push(-0.075, 0.2, 0.075);\r\n        positions.push(0, 1, 0);\r\n        positions.push(0.075, 0.2, 0.075);\r\n        positions.push(0, 1, 0);\r\n        positions.push(0.075, 0.2, -0.075);\r\n        positions.push(0, 1, 0);\r\n        this.setVertices({\r\n            position: new Float32Array(positions),\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/geometry/bone.ts?");

/***/ }),

/***/ "./src/core/components/geometry/geometry.ts":
/*!**************************************************!*\
  !*** ./src/core/components/geometry/geometry.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DrawMode\": () => (/* binding */ DrawMode),\n/* harmony export */   \"createVertexObject\": () => (/* binding */ createVertexObject),\n/* harmony export */   \"createVertexBufferObject\": () => (/* binding */ createVertexBufferObject),\n/* harmony export */   \"default\": () => (/* binding */ Geometry),\n/* harmony export */   \"calcNormals\": () => (/* binding */ calcNormals)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _boundingVolume_boundingSphere__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../boundingVolume/boundingSphere */ \"./src/core/components/boundingVolume/boundingSphere.ts\");\n/* harmony import */ var _base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/component */ \"./src/core/components/base/component.ts\");\n\r\n\r\n\r\n// https://www.khronos.org/registry/webgl/specs/latest/1.0/\r\n/*\r\n  const GLenum POINTS         = 0x0000;\r\n  const GLenum LINES          = 0x0001;\r\n  const GLenum LINE_LOOP      = 0x0002;\r\n  const GLenum LINE_STRIP     = 0x0003;\r\n  const GLenum TRIANGLES      = 0x0004;\r\n  const GLenum TRIANGLE_STRIP = 0x0005;\r\n  const GLenum TRIANGLE_FAN   = 0x0006;\r\n*/\r\nvar DrawMode;\r\n(function (DrawMode) {\r\n    DrawMode[DrawMode[\"TRIANGLE\"] = 4] = \"TRIANGLE\";\r\n    DrawMode[DrawMode[\"LINE\"] = 1] = \"LINE\";\r\n})(DrawMode || (DrawMode = {}));\r\nconst createVertexObject = () => {\r\n    return {\r\n        count: 0,\r\n        position: new Float32Array(),\r\n        normal: null,\r\n        indices: null,\r\n        texcoord: null,\r\n        min: gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create(),\r\n        max: gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create()\r\n    };\r\n};\r\nconst createVertexBufferObject = (gl) => {\r\n    return {\r\n        position: gl.createBuffer(),\r\n        normal: gl.createBuffer(),\r\n        indices: null,\r\n        texcoord: null\r\n    };\r\n};\r\nclass Geometry {\r\n    constructor(drawMode = DrawMode.TRIANGLE, visible = true, cull = true, boundingSphere = true) {\r\n        this.load = (gl) => {\r\n            if (this.buffer)\r\n                return true;\r\n            if (!this.vertex.count)\r\n                return false;\r\n            this.buffer = createVertexBufferObject(gl);\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer.position);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.vertex.position), gl.STATIC_DRAW);\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer.normal);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.vertex.normal), gl.STATIC_DRAW);\r\n            if (this.vertex.indices) {\r\n                this.buffer.indices = gl.createBuffer();\r\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.buffer.indices);\r\n                gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.vertex.indices), gl.STATIC_DRAW);\r\n            }\r\n            if (this.vertex.texcoord) {\r\n                this.buffer.texcoord = gl.createBuffer();\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer.texcoord);\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.vertex.texcoord), gl.STATIC_DRAW);\r\n            }\r\n            return true;\r\n        };\r\n        this.bind = (gl, material) => {\r\n            if (!this.load(gl))\r\n                return false;\r\n            const type = gl.FLOAT;\r\n            const normalize = false;\r\n            const stride = 0;\r\n            const offset = 0;\r\n            // POSITION\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer.position);\r\n            gl.enableVertexAttribArray(material.attributeLocations.get('aVertexPosition'));\r\n            gl.vertexAttribPointer(material.attributeLocations.get('aVertexPosition'), 3, type, normalize, stride, offset);\r\n            // NORMAL\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer.normal);\r\n            gl.enableVertexAttribArray(material.attributeLocations.get('aVertexNormal'));\r\n            gl.vertexAttribPointer(material.attributeLocations.get('aVertexNormal'), 3, type, normalize, stride, offset);\r\n            // INDICES\r\n            if (this.buffer.indices)\r\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.buffer.indices);\r\n            // UV\r\n            if (this.buffer.texcoord) {\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer.texcoord);\r\n                gl.enableVertexAttribArray(material.attributeLocations.get('aVertexUv'));\r\n                gl.vertexAttribPointer(material.attributeLocations.get('aVertexUv'), 2, type, normalize, stride, offset);\r\n            }\r\n            return true;\r\n        };\r\n        this.setVertices = (vertex) => {\r\n            this.vertex = vertex;\r\n            this.vertex.count = this.vertex.position.length;\r\n            if (!this.vertex.normal)\r\n                this.vertex.normal = calcNormals(this.vertex.position);\r\n            if (!this.vertex.min)\r\n                this.vertex.min = [-1.0, -1.0, -1.0];\r\n            if (!this.vertex.max)\r\n                this.vertex.max = [1.0, 1.0, 1.0];\r\n            return true;\r\n        };\r\n        this.onAdd = (self) => {\r\n            if (!this.boundingSphere)\r\n                return;\r\n            const boundingSphere = new _boundingVolume_boundingSphere__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n            self.add(boundingSphere);\r\n        };\r\n        this.type = _base_component__WEBPACK_IMPORTED_MODULE_1__.ComponentEnum.GEOMETRY;\r\n        this.drawMode = drawMode;\r\n        this.vertex = createVertexObject();\r\n        this.buffer = null;\r\n        this.visible = visible;\r\n        this.cull = cull;\r\n        this.boundingSphere = boundingSphere;\r\n    }\r\n}\r\nconst calcNormals = (positions) => {\r\n    const normals = new Array();\r\n    for (let positionIndex = 0; positionIndex < positions.length; positionIndex += 9) {\r\n        const p1 = [positions[positionIndex], positions[positionIndex + 1], positions[positionIndex + 2]];\r\n        const p2 = [positions[positionIndex + 3], positions[positionIndex + 4], positions[positionIndex + 5]];\r\n        const p3 = [positions[positionIndex + 6], positions[positionIndex + 7], positions[positionIndex + 8]];\r\n        const vecA = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_2__.sub(vecA, p2, p1);\r\n        const vecB = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_2__.sub(vecB, p3, p1);\r\n        let normal = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_2__.cross(normal, vecA, vecB);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_2__.normalize(normal, normal);\r\n        normals.push(...normal, ...normal, ...normal);\r\n    }\r\n    return new Float32Array(normals);\r\n};\r\n\n\n//# sourceURL=webpack:///./src/core/components/geometry/geometry.ts?");

/***/ }),

/***/ "./src/core/components/geometry/grid.ts":
/*!**********************************************!*\
  !*** ./src/core/components/geometry/grid.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Grid)\n/* harmony export */ });\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geometry */ \"./src/core/components/geometry/geometry.ts\");\n\r\nclass Grid extends _geometry__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(subdivisions = 1) {\r\n        super(_geometry__WEBPACK_IMPORTED_MODULE_0__.DrawMode.LINE, true, false, false);\r\n        const positions = new Array();\r\n        const step = 1.0 / subdivisions;\r\n        for (let pos = 0.0; pos < 1.0; pos += step) {\r\n            positions.push(pos, 0.0, 0.0);\r\n            positions.push(pos, 0.0, 1.0);\r\n            positions.push(0.0, 0.0, pos);\r\n            positions.push(1.0, 0.0, pos);\r\n        }\r\n        this.setVertices({\r\n            position: new Float32Array(positions)\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/geometry/grid.ts?");

/***/ }),

/***/ "./src/core/components/geometry/plane.ts":
/*!***********************************************!*\
  !*** ./src/core/components/geometry/plane.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Plane)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _boundingVolume_boundingBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../boundingVolume/boundingBox */ \"./src/core/components/boundingVolume/boundingBox.ts\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./geometry */ \"./src/core/components/geometry/geometry.ts\");\n\r\n\r\n\r\nclass Plane extends _geometry__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\r\n    constructor(subdivisions = 1) {\r\n        super(_geometry__WEBPACK_IMPORTED_MODULE_1__.DrawMode.TRIANGLE, true, true, false);\r\n        this.onAdd = (self) => {\r\n            const boundingBox = new _boundingVolume_boundingBox__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n            self.add(boundingBox);\r\n        };\r\n        const positions = new Array();\r\n        const step = 2.0 / subdivisions;\r\n        for (let xPos = 0.0; xPos < 1.0; xPos += step) {\r\n            for (let zPos = 0.0; zPos < 1.0; zPos += step) {\r\n                positions.push(xPos, 0.0, zPos);\r\n                positions.push(xPos + step, 0.0, zPos);\r\n                positions.push(xPos + step, 0.0, zPos - step);\r\n                positions.push(xPos + step, 0.0, zPos - step);\r\n                positions.push(xPos, 0.0, zPos - step);\r\n                positions.push(xPos, 0.0, zPos);\r\n            }\r\n        }\r\n        let position = [];\r\n        let min = [0, 0, 0];\r\n        let max = [0, 0, 0];\r\n        for (let posIndex = 0; posIndex < positions.length; posIndex += 3) {\r\n            position = [positions[posIndex], positions[posIndex + 1], positions[posIndex + 2]];\r\n            min = [Math.min(position[0], min[0]),\r\n                Math.min(position[1], min[1]),\r\n                Math.min(position[2], min[2])];\r\n            max = [Math.max(position[0], max[0]),\r\n                Math.max(position[1], max[1]),\r\n                Math.max(position[2], max[2])];\r\n        }\r\n        // TMP\r\n        min[1] = 0;\r\n        max[1] = 150;\r\n        this.setVertices({\r\n            position: new Float32Array(positions),\r\n            min: gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromValues(min[0], min[1], min[2]),\r\n            max: gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromValues(max[0], max[1], max[2]),\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/geometry/plane.ts?");

/***/ }),

/***/ "./src/core/components/geometry/quad.ts":
/*!**********************************************!*\
  !*** ./src/core/components/geometry/quad.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Quad)\n/* harmony export */ });\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geometry */ \"./src/core/components/geometry/geometry.ts\");\n\r\nclass Quad extends _geometry__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(input, visible = true, cull = true, boundingVolume = true) {\r\n        if (input.length !== 4)\r\n            console.error(\"Quad::constructor(): Invalid arguments!\");\r\n        super(_geometry__WEBPACK_IMPORTED_MODULE_0__.DrawMode.LINE, visible, cull, boundingVolume);\r\n        const positions = new Array();\r\n        positions.push(...input[0]);\r\n        positions.push(...input[1]);\r\n        positions.push(...input[1]);\r\n        positions.push(...input[2]);\r\n        positions.push(...input[2]);\r\n        positions.push(...input[3]);\r\n        positions.push(...input[3]);\r\n        positions.push(...input[0]);\r\n        this.setVertices({\r\n            position: new Float32Array(positions),\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/geometry/quad.ts?");

/***/ }),

/***/ "./src/core/components/geometry/terrain.ts":
/*!*************************************************!*\
  !*** ./src/core/components/geometry/terrain.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Terrain)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var _scene_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../scene/entity */ \"./src/core/scene/entity.ts\");\n/* harmony import */ var _plane__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./plane */ \"./src/core/components/geometry/plane.ts\");\n/* harmony import */ var _base_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/component */ \"./src/core/components/base/component.ts\");\n/* harmony import */ var _material_terrainMaterial__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../material/terrainMaterial */ \"./src/core/components/material/terrainMaterial.ts\");\n/* harmony import */ var _material_unlitMaterial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../material/unlitMaterial */ \"./src/core/components/material/unlitMaterial.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst TERRAIN_HEIGHTMAP_URI = \"/res/map/heightcombined.png\";\r\nconst TERRAIN_MAP_COMBINED = \"/res/map/terrainCombined.jpg\";\r\n// these settings are also related to the heightmap resolution\r\n// going to high with a low heightmap makes not much sense\r\n// high subdevisions ~= heightmap resolution / (terrain size / chunk size)\r\n// 64 ~= 41 = 2048 / (10000 / 200)\r\nconst TERRAIN_CHUNK_LOW_SUBDEVISIONS = 32;\r\nconst TERRAIN_CHUNK_HIGH_SUBDEVISIONS = 128;\r\nconst TERRAIN_CHUNK_SIZE = 100.0;\r\nclass Terrain {\r\n    // size is in units / m\r\n    constructor(size = 1000) {\r\n        this.onUpdate = (self, camera) => {\r\n            return;\r\n            const cameraPos = camera.get(_base_component__WEBPACK_IMPORTED_MODULE_2__.ComponentEnum.TRANSFORM).getGlobalPosition();\r\n            // ToDo(Eric) Check why we have to make this transform\r\n            // => this seems wrong\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_5__.multiply(cameraPos, cameraPos, [-1.0, 1.0, -1.0]);\r\n            // ToDo(Eric) Transform bb check in 0-1 range on both axis\r\n            cameraPos[0] += this.size;\r\n            cameraPos[2] += this.size;\r\n            for (let chunkIndex = 0; chunkIndex < this.chunks.length; chunkIndex++) {\r\n                const chunk = this.chunks[chunkIndex];\r\n                const chunkPos = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.create();\r\n                gl_matrix__WEBPACK_IMPORTED_MODULE_6__.getTranslation(chunkPos, chunk.get(_base_component__WEBPACK_IMPORTED_MODULE_2__.ComponentEnum.TRANSFORM).globalMatrix);\r\n                // ToDo(Eric) Transform bb check in 0-1 range on both axis\r\n                const chunkCornerLowerLeft = [chunkPos[0] - 1.0 + this.size, chunkPos[2] + 1.0 + this.size];\r\n                const chunkCornerUpperRight = [chunkPos[0] + 1.0 + this.size, chunkPos[2] - 1.0 + this.size];\r\n                // ToDo(Eric) Create method on bb class to handle checks\r\n                if (cameraPos[0] >= chunkCornerLowerLeft[0] &&\r\n                    cameraPos[0] <= chunkCornerUpperRight[0] &&\r\n                    cameraPos[2] <= chunkCornerLowerLeft[1] &&\r\n                    cameraPos[2] >= chunkCornerUpperRight[1]) {\r\n                    if (chunkIndex === this.activeChunkIndex)\r\n                        return;\r\n                    // TMP\r\n                    this.chunks.forEach(chunk => {\r\n                        //chunk.components[0] = this.lowGeometry\r\n                        //chunk.components[1] = this.lowMaterial \r\n                    });\r\n                    this.activeChunkIndex = chunkIndex;\r\n                    for (let offsetScalar = -1; offsetScalar <= 1; offsetScalar++) {\r\n                        const chunkIndex = this.activeChunkIndex + this.chunkCount * offsetScalar;\r\n                        // ToDo(Eric) Find a real solution\r\n                        // this is trash!\r\n                        try {\r\n                            this.chunks[chunkIndex - 1].components[1] = this.highGeometry;\r\n                            //this.chunks[chunkIndex - 1].components[1] = this.highMaterial as Component\r\n                        }\r\n                        catch (_a) { }\r\n                        try {\r\n                            this.chunks[chunkIndex].components[0] = this.highGeometry;\r\n                            //this.chunks[chunkIndex].components[1] = this.highMaterial as Component\r\n                        }\r\n                        catch (_b) { }\r\n                        try {\r\n                            this.chunks[chunkIndex + 1].components[0] = this.highGeometry;\r\n                            //this.chunks[chunkIndex + 1].components[1] = this.highMaterial as Component\r\n                        }\r\n                        catch (_c) { }\r\n                    }\r\n                }\r\n            }\r\n            this.chunks.forEach(chunk => { chunk.components[0] = this.lowGeometry; });\r\n            this.activeChunkIndex = null;\r\n        };\r\n        this.onAdd = (self) => {\r\n            this.chunks.forEach(chunk => self.get(_base_component__WEBPACK_IMPORTED_MODULE_2__.ComponentEnum.TRANSFORM).add(chunk));\r\n            self.get(_base_component__WEBPACK_IMPORTED_MODULE_2__.ComponentEnum.TRANSFORM).setLocalScale([this.size, 1.0, this.size]);\r\n            self.get(_base_component__WEBPACK_IMPORTED_MODULE_2__.ComponentEnum.TRANSFORM).setLocalPosition([this.size * -0.5, -100, this.size * -1.0]);\r\n        };\r\n        this.type = _base_component__WEBPACK_IMPORTED_MODULE_2__.ComponentEnum.TERRAIN;\r\n        this.size = size;\r\n        this.height = 75.0;\r\n        this.activeChunkIndex = null;\r\n        this.chunks = new Array();\r\n        this.lowMaterial = new _material_unlitMaterial__WEBPACK_IMPORTED_MODULE_4__[\"default\"]([1.0, 0.0, 1.0]);\r\n        this.lowGeometry = new _plane__WEBPACK_IMPORTED_MODULE_1__[\"default\"](TERRAIN_CHUNK_LOW_SUBDEVISIONS);\r\n        this.highMaterial = new _material_terrainMaterial__WEBPACK_IMPORTED_MODULE_3__[\"default\"](TERRAIN_HEIGHTMAP_URI, TERRAIN_MAP_COMBINED, this.height);\r\n        this.highGeometry = new _plane__WEBPACK_IMPORTED_MODULE_1__[\"default\"](TERRAIN_CHUNK_HIGH_SUBDEVISIONS);\r\n        const step = TERRAIN_CHUNK_SIZE / this.size;\r\n        const chunkScale = [step, 1.0, step];\r\n        let chunkPos = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.create();\r\n        for (let xPos = 0.0; xPos <= 1.0 - step; xPos += step) {\r\n            for (let zPos = 0.0; zPos <= 1.0 - step; zPos += step) {\r\n                chunkPos = gl_matrix__WEBPACK_IMPORTED_MODULE_5__.fromValues(xPos, 0.0, zPos);\r\n                const chunk = new _scene_entity__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n                chunk.get(_base_component__WEBPACK_IMPORTED_MODULE_2__.ComponentEnum.TRANSFORM).setLocalPosition(chunkPos);\r\n                chunk.get(_base_component__WEBPACK_IMPORTED_MODULE_2__.ComponentEnum.TRANSFORM).setLocalScale(chunkScale);\r\n                chunk.add(this.highGeometry);\r\n                chunk.add(this.highMaterial);\r\n                /*\r\n                const randomLuma: number = Math.random()\r\n                chunk.addComponent(new UnlitMaterial([randomLuma, randomLuma, randomLuma]))\r\n                */\r\n                this.chunks.push(chunk);\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/geometry/terrain.ts?");

/***/ }),

/***/ "./src/core/components/material/fresnelMaterial.ts":
/*!*********************************************************!*\
  !*** ./src/core/components/material/fresnelMaterial.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FresnelMaterial)\n/* harmony export */ });\n/* harmony import */ var _material__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./material */ \"./src/core/components/material/material.ts\");\n\r\nconst fsFresnelShader = __webpack_require__(/*! ../../../../src/core/components/material/shader/fresnel.fs */ \"./src/core/components/material/shader/fresnel.fs\");\r\nclass FresnelMaterial extends _material__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(color) {\r\n        super();\r\n        this.compile = (gl) => {\r\n            if (!this.compileBase(gl, fsFresnelShader))\r\n                return true;\r\n            this.uniformLocations.set('uColor', gl.getUniformLocation(this.program, 'uColor'));\r\n            this.uniformLocations.set('uAmbientLight', gl.getUniformLocation(this.program, 'uAmbientLight'));\r\n            this.uniformLocations.set('uLightDir', gl.getUniformLocation(this.program, 'uLightDir'));\r\n            this.uniformLocations.set('uViewDir', gl.getUniformLocation(this.program, 'uViewDir'));\r\n            return true;\r\n        };\r\n        this.bind = (gl, light, viewDir) => {\r\n            const { mainDirection } = light;\r\n            gl.uniform3fv(this.uniformLocations.get('uColor'), this.color);\r\n            gl.uniform1f(this.uniformLocations.get('uAmbientLight'), _material__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_AMBIENT_LIGHT_INTENSITY);\r\n            gl.uniform3fv(this.uniformLocations.get('uLightDir'), mainDirection);\r\n            gl.uniform3fv(this.uniformLocations.get('uViewDir'), viewDir);\r\n            return true;\r\n        };\r\n        this.color = color;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/material/fresnelMaterial.ts?");

/***/ }),

/***/ "./src/core/components/material/lambertMaterial.ts":
/*!*********************************************************!*\
  !*** ./src/core/components/material/lambertMaterial.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LambertMaterial)\n/* harmony export */ });\n/* harmony import */ var _material__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./material */ \"./src/core/components/material/material.ts\");\n\r\nconst vsDefaultSource = __webpack_require__(/*! ../../../../src/core/components/material/shader/default.vs */ \"./src/core/components/material/shader/default.vs\");\r\nconst fsLambertSource = __webpack_require__(/*! ../../../../src/core/components/material/shader/lambert.fs */ \"./src/core/components/material/shader/lambert.fs\");\r\nclass LambertMaterial extends _material__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(color) {\r\n        super();\r\n        this.compile = (gl) => {\r\n            if (!this.compileBase(gl, fsLambertSource))\r\n                return true;\r\n            this.uniformLocations.set('uColor', gl.getUniformLocation(this.program, 'uColor'));\r\n            this.uniformLocations.set('uAmbientLight', gl.getUniformLocation(this.program, 'uAmbientLight'));\r\n            this.uniformLocations.set('uLightDir', gl.getUniformLocation(this.program, 'uLightDir'));\r\n            return true;\r\n        };\r\n        this.bind = (gl, light) => {\r\n            const { mainDirection } = light;\r\n            gl.uniform3fv(this.uniformLocations.get('uColor'), this.color);\r\n            gl.uniform1f(this.uniformLocations.get('uAmbientLight'), _material__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_AMBIENT_LIGHT_INTENSITY);\r\n            gl.uniform3fv(this.uniformLocations.get('uLightDir'), mainDirection);\r\n            return true;\r\n        };\r\n        this.color = color;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/material/lambertMaterial.ts?");

/***/ }),

/***/ "./src/core/components/material/material.ts":
/*!**************************************************!*\
  !*** ./src/core/components/material/material.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_AMBIENT_LIGHT_INTENSITY\": () => (/* binding */ DEFAULT_AMBIENT_LIGHT_INTENSITY),\n/* harmony export */   \"default\": () => (/* binding */ Material),\n/* harmony export */   \"compileProgram\": () => (/* binding */ compileProgram),\n/* harmony export */   \"loadShader\": () => (/* binding */ loadShader)\n/* harmony export */ });\n/* harmony import */ var _base_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/component */ \"./src/core/components/base/component.ts\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _internal_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/debug */ \"./src/core/internal/debug.ts\");\n/* harmony import */ var _util_math_round__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../util/math/round */ \"./src/util/math/round.ts\");\n\r\n\r\n\r\n\r\nconst vsDefaultSource = __webpack_require__(/*! ../../../../src/core/components/material/shader/default.vs */ \"./src/core/components/material/shader/default.vs\");\r\nconst DEFAULT_MAIN_LIGHT_DIRECTION = gl_matrix__WEBPACK_IMPORTED_MODULE_3__.normalize(gl_matrix__WEBPACK_IMPORTED_MODULE_3__.create(), [0.75, 0.25, 0.0]);\r\nconst DEFAULT_AMBIENT_LIGHT_INTENSITY = 0.25;\r\nclass Material {\r\n    constructor() {\r\n        this.bindBase = (gl, entity, camera, light = { mainDirection: DEFAULT_MAIN_LIGHT_DIRECTION }) => {\r\n            const { localMatrix: modelMatrix, globalMatrix: globalMatrix } = entity.get(_base_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM);\r\n            const { projectionMatrix, viewMatrix, viewDir } = camera.get(_base_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.CAMERA);\r\n            if (!this.compile(gl))\r\n                return false;\r\n            gl.useProgram(this.program);\r\n            this.bind(gl, light, viewDir, modelMatrix);\r\n            gl.uniformMatrix4fv(this.uniformLocations.get('uWorldMatrix'), false, globalMatrix);\r\n            gl.uniformMatrix4fv(this.uniformLocations.get('uViewMatrix'), false, viewMatrix);\r\n            gl.uniformMatrix4fv(this.uniformLocations.get('uProjectionMatrix'), false, projectionMatrix);\r\n            return true;\r\n        };\r\n        this.compileBase = (gl, fsSource, vsSource = vsDefaultSource) => {\r\n            if (this.program)\r\n                return false;\r\n            const startTime = performance.now();\r\n            const result = compileProgram(gl, vsSource, fsSource);\r\n            if (!result) {\r\n                _internal_debug__WEBPACK_IMPORTED_MODULE_1__[\"default\"].info(`Material::compileBase(): Failed to compile program!`);\r\n                return null;\r\n            }\r\n            const { program, attributeLocations, uniformLocations } = result;\r\n            this.program = program;\r\n            this.attributeLocations = attributeLocations;\r\n            this.uniformLocations = uniformLocations;\r\n            const compileTime = (0,_util_math_round__WEBPACK_IMPORTED_MODULE_2__.roundNumber)(performance.now() - startTime);\r\n            _internal_debug__WEBPACK_IMPORTED_MODULE_1__[\"default\"].info(`Material::compileBase(): Compiled program in = ${compileTime} ms`);\r\n            return true;\r\n        };\r\n        this.type = _base_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.MATERIAL;\r\n        this.program = null;\r\n        this.attributeLocations = null;\r\n        this.uniformLocations = null;\r\n    }\r\n}\r\nconst compileProgram = (gl, vsSource, fsSource) => {\r\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n    const program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        _internal_debug__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(`Failed to initialize shader program: ${gl.getProgramInfoLog(program)}`);\r\n        return null;\r\n    }\r\n    const attributeLocations = new Map();\r\n    attributeLocations.set('aVertexPosition', gl.getAttribLocation(program, 'aVertexPosition'));\r\n    attributeLocations.set('aVertexNormal', gl.getAttribLocation(program, 'aVertexNormal'));\r\n    attributeLocations.set('aVertexUv', gl.getAttribLocation(program, 'aVertexUv'));\r\n    const uniformLocations = new Map();\r\n    uniformLocations.set('uWorldMatrix', gl.getUniformLocation(program, 'uWorldMatrix'));\r\n    uniformLocations.set('uViewMatrix', gl.getUniformLocation(program, 'uViewMatrix'));\r\n    uniformLocations.set('uProjectionMatrix', gl.getUniformLocation(program, 'uProjectionMatrix'));\r\n    return {\r\n        program,\r\n        attributeLocations,\r\n        uniformLocations,\r\n    };\r\n};\r\nconst loadShader = (gl, type, source) => {\r\n    const shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        console.error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}`);\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n    return shader;\r\n};\r\n\n\n//# sourceURL=webpack:///./src/core/components/material/material.ts?");

/***/ }),

/***/ "./src/core/components/material/terrainMaterial.ts":
/*!*********************************************************!*\
  !*** ./src/core/components/material/terrainMaterial.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TerrainMaterial)\n/* harmony export */ });\n/* harmony import */ var _material__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./material */ \"./src/core/components/material/material.ts\");\n\r\nconst vsTerrainSource = __webpack_require__(/*! ../../../../src/core/components/material/shader/terrain.vs */ \"./src/core/components/material/shader/terrain.vs\");\r\nconst fsTerrainSorce = __webpack_require__(/*! ../../../../src/core/components/material/shader/terrain.fs */ \"./src/core/components/material/shader/terrain.fs\");\r\nclass TerrainMaterial extends _material__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(heightmapUri, terrainmapUri, height) {\r\n        super();\r\n        this.compile = (gl) => {\r\n            if (!this.compileBase(gl, fsTerrainSorce, vsTerrainSource))\r\n                return true;\r\n            this.uniformLocations.set('uOffsetMatrix', gl.getUniformLocation(this.program, 'uOffsetMatrix'));\r\n            this.uniformLocations.set('uAmbientLight', gl.getUniformLocation(this.program, 'uAmbientLight'));\r\n            this.uniformLocations.set('uLightDir', gl.getUniformLocation(this.program, 'uLightDir'));\r\n            this.uniformLocations.set('uHeightmap', gl.getUniformLocation(this.program, 'uHeightmap'));\r\n            this.uniformLocations.set('uTerrain', gl.getUniformLocation(this.program, 'uTerrain'));\r\n            this.uniformLocations.set('uHeight', gl.getUniformLocation(this.program, 'uHeight'));\r\n            // ToDo Abstract this into function\r\n            var heightmap = new Image();\r\n            heightmap.src = this.heightmapUri;\r\n            heightmap.addEventListener('load', () => {\r\n                this.heightmap = gl.createTexture();\r\n                gl.bindTexture(gl.TEXTURE_2D, this.heightmap);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, heightmap);\r\n            });\r\n            var terrainmap = new Image();\r\n            terrainmap.src = this.terrainmapUri;\r\n            terrainmap.addEventListener('load', () => {\r\n                this.terrainmap = gl.createTexture();\r\n                gl.bindTexture(gl.TEXTURE_2D, this.terrainmap);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, terrainmap);\r\n            });\r\n            return true;\r\n        };\r\n        this.bind = (gl, light, viewDir, offsetMatrix) => {\r\n            const { mainDirection } = light;\r\n            gl.uniform1f(this.uniformLocations.get('uAmbientLight'), _material__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_AMBIENT_LIGHT_INTENSITY);\r\n            gl.uniform3fv(this.uniformLocations.get('uLightDir'), mainDirection);\r\n            gl.activeTexture(gl.TEXTURE0);\r\n            gl.bindTexture(gl.TEXTURE_2D, this.heightmap);\r\n            gl.uniform1i(this.uniformLocations.get('uHeightmap'), 0);\r\n            gl.activeTexture(gl.TEXTURE1);\r\n            gl.bindTexture(gl.TEXTURE_2D, this.terrainmap);\r\n            gl.uniform1i(this.uniformLocations.get('uTerrain'), 1);\r\n            gl.uniform1f(this.uniformLocations.get('uHeight'), this.height);\r\n            gl.uniformMatrix4fv(this.uniformLocations.get('uOffsetMatrix'), false, offsetMatrix);\r\n            return true;\r\n        };\r\n        this.height = height;\r\n        this.heightmapUri = heightmapUri;\r\n        this.terrainmapUri = terrainmapUri;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/material/terrainMaterial.ts?");

/***/ }),

/***/ "./src/core/components/material/unlitMaterial.ts":
/*!*******************************************************!*\
  !*** ./src/core/components/material/unlitMaterial.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UnlitMaterial)\n/* harmony export */ });\n/* harmony import */ var _material__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./material */ \"./src/core/components/material/material.ts\");\n\r\nconst fsUnlitSource = __webpack_require__(/*! ../../../../src/core/components/material/shader/unlit.fs */ \"./src/core/components/material/shader/unlit.fs\");\r\nclass UnlitMaterial extends _material__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(color) {\r\n        super();\r\n        this.compile = (gl) => {\r\n            if (!this.compileBase(gl, fsUnlitSource))\r\n                return true;\r\n            this.uniformLocations.set('uColor', gl.getUniformLocation(this.program, 'uColor'));\r\n            return true;\r\n        };\r\n        this.bind = (gl) => {\r\n            gl.uniform3fv(this.uniformLocations.get('uColor'), this.color);\r\n            return true;\r\n        };\r\n        this.color = color;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/material/unlitMaterial.ts?");

/***/ }),

/***/ "./src/core/components/scripts/turntable.ts":
/*!**************************************************!*\
  !*** ./src/core/components/scripts/turntable.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Turntable)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _internal_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../internal/time */ \"./src/core/internal/time.ts\");\n/* harmony import */ var _base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/component */ \"./src/core/components/base/component.ts\");\n\r\n\r\n\r\nclass Turntable {\r\n    constructor(speed, axis) {\r\n        this.onUpdate = (self, camera) => {\r\n            const transform = self.get(_base_component__WEBPACK_IMPORTED_MODULE_1__.ComponentEnum.TRANSFORM);\r\n            const axisRotation = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.scale(gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create(), this.axis, this.speed * _internal_time__WEBPACK_IMPORTED_MODULE_0__[\"default\"].deltaTime);\r\n            transform.setLocalEulerRotation([transform.localRotation[0] + axisRotation[0], transform.localRotation[1] + axisRotation[1], transform.localRotation[2] + axisRotation[2]]);\r\n        };\r\n        this.type = _base_component__WEBPACK_IMPORTED_MODULE_1__.ComponentEnum.SCRIPT;\r\n        this.speed = speed;\r\n        this.axis = axis;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/components/scripts/turntable.ts?");

/***/ }),

/***/ "./src/core/engine.ts":
/*!****************************!*\
  !*** ./src/core/engine.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Engine)\n/* harmony export */ });\n/* harmony import */ var _components_base_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/base/component */ \"./src/core/components/base/component.ts\");\n/* harmony import */ var _internal_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/debug */ \"./src/core/internal/debug.ts\");\n/* harmony import */ var _internal_input__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/input */ \"./src/core/internal/input.ts\");\n/* harmony import */ var _internal_time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/time */ \"./src/core/internal/time.ts\");\n/* harmony import */ var _renderer_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./renderer/renderer */ \"./src/core/renderer/renderer.ts\");\n/* harmony import */ var _scene_scene__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scene/scene */ \"./src/core/scene/scene.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass Engine {\r\n    constructor(canvas, sceneCamera) {\r\n        this.stats = null;\r\n        _internal_time__WEBPACK_IMPORTED_MODULE_3__[\"default\"].init();\r\n        _internal_debug__WEBPACK_IMPORTED_MODULE_1__[\"default\"].init(sceneCamera);\r\n        _internal_input__WEBPACK_IMPORTED_MODULE_2__[\"default\"].init();\r\n        this.canvas = canvas;\r\n        this.renderer = new _renderer_renderer__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.canvas);\r\n        this.scene = new _scene_scene__WEBPACK_IMPORTED_MODULE_5__[\"default\"](sceneCamera);\r\n        const sceneCameraTransform = sceneCamera.get(_components_base_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM);\r\n        const update = curTime => {\r\n            const startTime = Date.now();\r\n            _internal_time__WEBPACK_IMPORTED_MODULE_3__[\"default\"].tick(curTime);\r\n            sceneCameraTransform.setLocalEulerRotation([0.0, Math.cos((Date.now() - _internal_time__WEBPACK_IMPORTED_MODULE_3__[\"default\"].startTime) * 0.00075) * Math.PI * 0.05, 0.0]);\r\n            this.scene.update();\r\n            _internal_debug__WEBPACK_IMPORTED_MODULE_1__[\"default\"].update();\r\n            this.renderer.renderEntities(this.scene.getVisibleEntities(), _internal_debug__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cameraEnabled ? _internal_debug__WEBPACK_IMPORTED_MODULE_1__[\"default\"].camera : this.scene.camera);\r\n            this.stats = {\r\n                frameTime: Math.ceil(Date.now() - startTime),\r\n                FPS: Math.ceil(1 / _internal_time__WEBPACK_IMPORTED_MODULE_3__[\"default\"].deltaTime)\r\n            };\r\n            _internal_debug__WEBPACK_IMPORTED_MODULE_1__[\"default\"].updateStats({ main: this.stats });\r\n            requestAnimationFrame(update);\r\n        };\r\n        requestAnimationFrame(update);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/engine.ts?");

/***/ }),

/***/ "./src/core/internal/console.ts":
/*!**************************************!*\
  !*** ./src/core/internal/console.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Console)\n/* harmony export */ });\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input */ \"./src/core/internal/input.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\nclass Console {\r\n    constructor(root) {\r\n        this.help = (name = null) => {\r\n            if (!name)\r\n                return `Console::help(): Available commands: ${Array.from(this.commands.keys()).join(', ')}, help 'command'`;\r\n            const commandInfo = this.commands.get(name);\r\n            if (!commandInfo) {\r\n                this.executeCommand(\"help\");\r\n                return `Console::help(): Invalid command name!`;\r\n            }\r\n            return `Console::help(): ${name} command description = ${commandInfo.description}`;\r\n        };\r\n        this.visible = false;\r\n        this.root = root;\r\n        this.init();\r\n        this.registerCommand({\r\n            name: \"help\",\r\n            callback: this.help,\r\n            arg: true,\r\n        });\r\n    }\r\n    init() {\r\n        this.commands = new Map();\r\n        this.console = document.createElement('div');\r\n        this.console.style.cssText = 'height: 25%; width: 100%; background: rgba(0.0, 0.0, 0.0, 0.5); display: flex; flex-direction: column-reverse;';\r\n        this.consoleWrapper = document.createElement('div');\r\n        this.consoleWrapper.style.cssText = 'background: rgba(0.0, 0.0, 0.0, 0.0); display: flex; flex-direction: row;';\r\n        this.console.appendChild(this.consoleWrapper);\r\n        this.consolePrompt = document.createElement('p');\r\n        this.consolePrompt.style.cssText = 'margin: 6px; color: white; height: fit-content;';\r\n        this.consolePrompt.innerText = \"$ \";\r\n        this.consoleWrapper.appendChild(this.consolePrompt);\r\n        this.consoleInput = document.createElement('input');\r\n        this.consoleInput.type = \"text\";\r\n        this.consoleInput.style.cssText = 'margin: 6px; color: white; font-family: monospace; font-size: 10px; width: 75%; height: fit-content; padding: 0px; border: 0px; background: rgba(0.0, 0.0, 0.0, 0.0); outline: none;';\r\n        this.consoleInput.onkeydown = (event) => {\r\n            if (!this.consoleInput.value)\r\n                return;\r\n            switch (event.key.toLowerCase()) {\r\n                case \"enter\": {\r\n                    this.executeCommand(this.consoleInput.value);\r\n                    this.consoleInput.value = '';\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        // This is a very nice way to filter out ^ / dead but it seems to be legacy\r\n        this.consoleInput.onkeypress = (event) => event.keyCode !== 94;\r\n        this.consoleWrapper.appendChild(this.consoleInput);\r\n        this.consoleOutputList = document.createElement('ul');\r\n        this.consoleOutputList.style.cssText = 'color: white; font-family: monospace; font-size: 10px; list-style-type: none; margin: 10px 8px 0px 0px; padding-left: 24px; overflow:hidden; overflow-y:scroll; display: flex; flex-direction: column-reverse;';\r\n        this.console.appendChild(this.consoleOutputList);\r\n        window.onkeydown = (event) => {\r\n            switch (event.key.toLowerCase()) {\r\n                case \"dead\": {\r\n                    this.toggleVisible();\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    log(message, type = \"INFO\") {\r\n        const consoleOutputItem = document.createElement('li');\r\n        consoleOutputItem.style.cssText = 'margin: 0px 0px 6px 0px; color: lightgray;';\r\n        let color = \"lightgreen\";\r\n        switch (type) {\r\n            case \"WARN\":\r\n                color = \"khaki\";\r\n                break;\r\n            case \"ERROR\":\r\n                color = \"lightsalmon\";\r\n                break;\r\n        }\r\n        consoleOutputItem.innerHTML = `<small>${new Date().toLocaleTimeString()}</small> <b style=\"color:${color};\">${type}</b><span>: ${message}</span>`;\r\n        this.consoleOutputList.insertBefore(consoleOutputItem, this.consoleOutputList.firstChild);\r\n    }\r\n    registerCommand(info) {\r\n        if (!info.description)\r\n            info.description = \"No description available!\";\r\n        if (!info.arg)\r\n            info.arg = false;\r\n        this.commands.set(info.name, info);\r\n    }\r\n    executeCommand(input) {\r\n        const handleExecution = () => __awaiter(this, void 0, void 0, function* () {\r\n            const inputParts = input.split(\" \");\r\n            const name = inputParts[0];\r\n            if (!this.commands.has(name)) {\r\n                this.log(\"Console::executeCommand(): Invalid command!\", \"ERROR\");\r\n                this.executeCommand(\"help\");\r\n                return;\r\n            }\r\n            const { callback, arg } = this.commands.get(name);\r\n            if (!arg) {\r\n                this.log(callback());\r\n                return;\r\n            }\r\n            inputParts.shift();\r\n            const text = inputParts.join(\" \");\r\n            let result = callback(text);\r\n            if (result.then) {\r\n                try {\r\n                    result = yield result;\r\n                }\r\n                catch (error) {\r\n                    result = error;\r\n                }\r\n            }\r\n            this.log(result);\r\n        });\r\n        handleExecution();\r\n    }\r\n    toggleVisible() {\r\n        this.visible = !this.visible;\r\n        _input__WEBPACK_IMPORTED_MODULE_0__[\"default\"].locked = this.visible;\r\n        this.visible ? this.root.insertBefore(this.console, this.root.firstChild) : this.root.removeChild(this.console);\r\n        this.visible ? this.consoleInput.focus() : this.consoleInput.blur();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/internal/console.ts?");

/***/ }),

/***/ "./src/core/internal/debug.ts":
/*!************************************!*\
  !*** ./src/core/internal/debug.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Debug)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec2.js\");\n/* harmony import */ var _components_base_camera__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/base/camera */ \"./src/core/components/base/camera.ts\");\n/* harmony import */ var _components_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/base/component */ \"./src/core/components/base/component.ts\");\n/* harmony import */ var _components_controls_flyControls__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/controls/flyControls */ \"./src/core/components/controls/flyControls.ts\");\n/* harmony import */ var _components_material_unlitMaterial__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/material/unlitMaterial */ \"./src/core/components/material/unlitMaterial.ts\");\n/* harmony import */ var _scene_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scene/entity */ \"./src/core/scene/entity.ts\");\n/* harmony import */ var _console__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./console */ \"./src/core/internal/console.ts\");\n/* harmony import */ var _fameInspector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fameInspector */ \"./src/core/internal/fameInspector.ts\");\nvar _a;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Debug {\r\n}\r\n_a = Debug;\r\nDebug.init = (sceneCamera) => {\r\n    _a.root = document.createElement('div');\r\n    _a.root.style.cssText = 'position: absolute; font-family: monospace; font-size: 10px; height: 100%; width: 100%; top: 0px; left: 0px; background: rgba(0.0, 0.0, 0.0, 0.0); z-index: 0; display: flex; flex-direction: column;';\r\n    document.body.appendChild(_a.root);\r\n    _a.initStats();\r\n    _a.console = new _console__WEBPACK_IMPORTED_MODULE_5__[\"default\"](_a.root);\r\n    _a.frameInspector = new _fameInspector__WEBPACK_IMPORTED_MODULE_6__[\"default\"](_a.root);\r\n    _a.cameraEnabled = false;\r\n    _a.sceneCamera = sceneCamera;\r\n    _a.material = new _components_material_unlitMaterial__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([1.0, 0.0, 1.0]);\r\n    _a.console.registerCommand({ name: \"ds\", description: \"Display debug statistics.\", callback: _a.toggleStats });\r\n    _a.console.registerCommand({ name: \"fi\", description: \"Display frame inspector.\", callback: _a.frameInspector.toggleVisible });\r\n    _a.console.registerCommand({ name: \"dc\", description: \"Toggle debug fly camera.\", callback: _a.toggleCamera });\r\n};\r\nDebug.initStats = () => {\r\n    _a.stats = {};\r\n    _a.statsRoot = document.createElement('div');\r\n    _a.statsRoot.style.cssText = 'background: rgba(0.0, 0.0, 0.0, 0.0); display: flex; flex-direction: column; visibility: hidden;';\r\n    _a.root.appendChild(_a.statsRoot);\r\n    _a.statsElement = document.createElement('p');\r\n    _a.statsElement.style.cssText = 'min-width: 150px; padding: 6px; margin-top: 0px; background-color: rgba(0.0, 0.0, 0.0, 0.5); color: lightgray; width: fit-content; white-space: pre;';\r\n    _a.statsRoot.appendChild(_a.statsElement);\r\n};\r\nDebug.updateStats = (stats) => {\r\n    for (const [name, entry] of Object.entries(stats)) {\r\n        _a.stats[name] = entry;\r\n    }\r\n    let output = \"\";\r\n    for (const [statSectionName, statSectionValue] of Object.entries(_a.stats)) {\r\n        output += statSectionName + ':\\r\\n';\r\n        for (const [statName, statValue] of Object.entries(statSectionValue))\r\n            output += '  ' + statName + ' = ' + statValue.toString() + '\\r\\n';\r\n        output += '\\r\\n';\r\n    }\r\n    _a.statsElement.textContent = output;\r\n};\r\nDebug.toggleStats = () => {\r\n    const isHidden = Debug.statsRoot.style.visibility === \"hidden\";\r\n    Debug.statsRoot.style.visibility = isHidden ? \"\" : \"hidden\";\r\n    return `Debug::toggleDebugStats(): ${isHidden ? \"Enabled\" : \"Disabled\"} debug stats.`;\r\n};\r\nDebug.info = (message) => {\r\n    _a.console.log(message, \"INFO\");\r\n};\r\nDebug.warn = (message) => {\r\n    _a.console.log(message, \"WARN\");\r\n};\r\nDebug.error = (message) => {\r\n    _a.console.log(message, \"ERROR\");\r\n};\r\nDebug.createCamera = (sceneCamera) => {\r\n    const sceneCameraComponent = sceneCamera.get(_components_base_component__WEBPACK_IMPORTED_MODULE_1__.ComponentEnum.CAMERA);\r\n    _a.camera = new _scene_entity__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\r\n    _a.camera.add(new _components_controls_flyControls__WEBPACK_IMPORTED_MODULE_2__[\"default\"]());\r\n    _a.camera.add(new _components_base_camera__WEBPACK_IMPORTED_MODULE_0__[\"default\"](sceneCameraComponent.fov, sceneCameraComponent.aspect));\r\n};\r\nDebug.update = () => {\r\n    if (!_a.cameraEnabled)\r\n        return;\r\n    _a.camera.get(_components_base_component__WEBPACK_IMPORTED_MODULE_1__.ComponentEnum.CONTROLS).onUpdate(_a.camera, _a.camera);\r\n    _a.camera.get(_components_base_component__WEBPACK_IMPORTED_MODULE_1__.ComponentEnum.TRANSFORM).onUpdate(_a.camera, _a.camera);\r\n    _a.camera.get(_components_base_component__WEBPACK_IMPORTED_MODULE_1__.ComponentEnum.CAMERA).onUpdate(_a.camera, _a.camera);\r\n};\r\nDebug.toggleCamera = () => {\r\n    _a.cameraEnabled = !_a.cameraEnabled;\r\n    if (!_a.cameraEnabled)\r\n        return \"Engine::toggleDebugCamera(): Disabled debug camera.\";\r\n    const sceneCameraTransform = _a.sceneCamera.get(_components_base_component__WEBPACK_IMPORTED_MODULE_1__.ComponentEnum.TRANSFORM);\r\n    // create debug camera if none exists\r\n    if (!_a.camera)\r\n        _a.createCamera(_a.sceneCamera);\r\n    // set debug camera position to scene camera\r\n    _a.camera.get(_components_base_component__WEBPACK_IMPORTED_MODULE_1__.ComponentEnum.TRANSFORM).setLocalPosition(sceneCameraTransform.getGlobalPosition());\r\n    _a.camera.get(_components_base_component__WEBPACK_IMPORTED_MODULE_1__.ComponentEnum.CONTROLS).angleRotation = gl_matrix__WEBPACK_IMPORTED_MODULE_7__.create();\r\n    return \"Engine::toggleDebugCamera(): Enabled debug camera.\";\r\n};\r\n\n\n//# sourceURL=webpack:///./src/core/internal/debug.ts?");

/***/ }),

/***/ "./src/core/internal/fameInspector.ts":
/*!********************************************!*\
  !*** ./src/core/internal/fameInspector.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FrameInspector)\n/* harmony export */ });\nclass FrameInspector {\r\n    constructor(root) {\r\n        this.toggleVisible = () => {\r\n            if (!this.frameInspector)\r\n                return \"frameInspector::toggleVisible(): No element found!\";\r\n            this.visible = !this.visible;\r\n            this.visible ? this.root.insertBefore(this.frameInspector, this.root.firstChild) : this.root.removeChild(this.frameInspector);\r\n            return `frameInspector::toggleVisible(): ${this.visible ? \"Enabled\" : \"Disabled\"} frame inspector.`;\r\n        };\r\n        this.visible = false;\r\n        this.root = root;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.frameInspector = document.createElement('div');\r\n        this.frameInspector.style.cssText = 'height: 25%; width: 100%; background: rgba(0.0, 0.0, 0.0, 0.5); display: flex; flex-direction: row;';\r\n        this.frameInspector.innerHTML = `\r\n      <div style=\"background-color:blue; width: 48px; height: 12px\"></div>\r\n      <div style=\"background-color:red; width: 48px; height: 12px\"></div>\r\n    `;\r\n    }\r\n    update(stats) {\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/internal/fameInspector.ts?");

/***/ }),

/***/ "./src/core/internal/input.ts":
/*!************************************!*\
  !*** ./src/core/internal/input.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Input)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec2.js\");\nvar _a;\r\n\r\nconst WINDOW_SIZE = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(window.innerWidth, window.innerHeight);\r\nclass Input {\r\n}\r\n_a = Input;\r\nInput.init = () => {\r\n    _a.keyState = new Map();\r\n    _a.mouseState = {\r\n        position: gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create(),\r\n        deltaPosition: gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create()\r\n    };\r\n    document.onkeyup = (event) => {\r\n        _a.keyState.set(event.key.toLowerCase(), false);\r\n    };\r\n    document.onkeydown = (event) => {\r\n        _a.keyState.set(event.key.toLowerCase(), true);\r\n    };\r\n    //document.body.style.cursor = 'none'\r\n    document.onmouseenter = (event) => _a.mouseState.position = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.fromValues(event.offsetX, event.offsetY);\r\n    // handle this manually in game loop to keep synch?\r\n    document.onmousemove = _a.updateMouseState;\r\n    document.onmouseleave = () => _a.mouseState.deltaPosition.fill(0.0);\r\n    _a.locked = false;\r\n};\r\nInput.updateMouseState = (event) => {\r\n    if (_a.locked)\r\n        return;\r\n    if (_a.mouseMoveTimeout)\r\n        clearTimeout(_a.mouseMoveTimeout);\r\n    const mousePosition = [event.offsetX, event.offsetY];\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_0__.sub(_a.mouseState.deltaPosition, mousePosition, _a.mouseState.position);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_0__.div(_a.mouseState.deltaPosition, _a.mouseState.deltaPosition, WINDOW_SIZE);\r\n    _a.mouseState.position = mousePosition;\r\n    _a.mouseMoveTimeout = setTimeout(() => _a.mouseState.deltaPosition.fill(0.0), 67);\r\n};\r\nInput.isKeyDown = (keyName) => {\r\n    const key = keyName.toLowerCase();\r\n    if (!_a.keyState.has(key) || _a.locked)\r\n        return false;\r\n    return _a.keyState.get(key);\r\n};\r\n\n\n//# sourceURL=webpack:///./src/core/internal/input.ts?");

/***/ }),

/***/ "./src/core/internal/time.ts":
/*!***********************************!*\
  !*** ./src/core/internal/time.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Time)\n/* harmony export */ });\nvar _a;\r\nclass Time {\r\n}\r\n_a = Time;\r\nTime.init = () => {\r\n    _a.startTime = Date.now();\r\n    _a.deltaTime = 0.0;\r\n    _a.prevTime = _a.startTime;\r\n};\r\nTime.tick = (curTime) => {\r\n    _a.deltaTime = Math.round((curTime - _a.prevTime) * 100) / 100000;\r\n    _a.prevTime = curTime;\r\n};\r\n\n\n//# sourceURL=webpack:///./src/core/internal/time.ts?");

/***/ }),

/***/ "./src/core/network/gameNetworkController.ts":
/*!***************************************************!*\
  !*** ./src/core/network/gameNetworkController.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getLocalClientTransform\": () => (/* binding */ getLocalClientTransform),\n/* harmony export */   \"default\": () => (/* binding */ GameNetworkController)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _util_math_vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util/math/vector */ \"./src/util/math/vector.ts\");\n/* harmony import */ var _components_geometry_geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/geometry/geometry */ \"./src/core/components/geometry/geometry.ts\");\n/* harmony import */ var _components_material_lambertMaterial__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/material/lambertMaterial */ \"./src/core/components/material/lambertMaterial.ts\");\n/* harmony import */ var _internal_debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/debug */ \"./src/core/internal/debug.ts\");\n/* harmony import */ var _internal_time__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/time */ \"./src/core/internal/time.ts\");\n/* harmony import */ var _scene_entity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../scene/entity */ \"./src/core/scene/entity.ts\");\n/* harmony import */ var _components_base_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/base/component */ \"./src/core/components/base/component.ts\");\n/* harmony import */ var _util_math_round__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../util/math/round */ \"./src/util/math/round.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst getLocalClientTransform = (entity) => {\r\n    const transform = entity.get(_components_base_component__WEBPACK_IMPORTED_MODULE_6__.ComponentEnum.TRANSFORM);\r\n    const controls = entity.get(_components_base_component__WEBPACK_IMPORTED_MODULE_6__.ComponentEnum.CONTROLS);\r\n    const position = (0,_util_math_vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(transform.getGlobalPosition());\r\n    const rotation = (0,_util_math_round__WEBPACK_IMPORTED_MODULE_7__.roundNumber)(controls.angleRotation[0]);\r\n    return {\r\n        currentPosition: position,\r\n        targetPosition: position,\r\n        currentRotation: rotation,\r\n        targetRotation: rotation\r\n    };\r\n};\r\nconst createLocalClient = (clientId, entity) => {\r\n    return {\r\n        clientId,\r\n        entity,\r\n        transform: getLocalClientTransform(entity)\r\n    };\r\n};\r\nconst equalPosition = (a, b) => {\r\n    for (var i = 0; i < a.length; ++i) {\r\n        if (a[i] !== b[i])\r\n            return false;\r\n    }\r\n    return true;\r\n};\r\nclass GameNetworkController {\r\n    constructor(client, sceneRoot, entity) {\r\n        this.tick = () => {\r\n            // ToDo Log tick time\r\n            // get current transform\r\n            const currentTransform = getLocalClientTransform(this.localClient.entity);\r\n            // update transform cache\r\n            const { transform } = this.localClient;\r\n            transform.currentPosition = currentTransform.currentPosition;\r\n            transform.currentRotation = currentTransform.currentRotation;\r\n            // send transform package and update cache if position or rotation changed\r\n            if (transform.targetRotation === transform.currentRotation && equalPosition(transform.targetPosition, transform.currentPosition))\r\n                return;\r\n            transform.targetPosition = transform.currentPosition;\r\n            transform.targetRotation = transform.currentRotation;\r\n            this.onLocalClientTransformUpdate(transform);\r\n        };\r\n        this.onConnect = (data) => {\r\n            const { timeMs, tickIntervalMs } = data;\r\n            const currentTimeMs = Date.now();\r\n            const timeDifferenceMs = currentTimeMs - timeMs;\r\n            // TMP Come up with a solution that is validated\r\n            // Right now we sync the local message loop to send every 0.25 * tickIntervalMs from the server tick start time\r\n            const syncDelayMs = Math.floor(tickIntervalMs * 0.25 - timeDifferenceMs);\r\n            setTimeout(() => {\r\n                this.timerId = setInterval(this.tick, tickIntervalMs);\r\n            }, syncDelayMs);\r\n        };\r\n        this.update = () => {\r\n            const { deltaTime } = _internal_time__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\r\n            const { tickIntervalMs } = this.client.settings;\r\n            const INTERPOLATION_SPEED = 0.35 * (1000 / tickIntervalMs);\r\n            // ToDo Log interpolation time and make this async\r\n            for (const client of this.remoteClients.values()) {\r\n                const { transform, entity } = client;\r\n                const targetPosition = gl_matrix__WEBPACK_IMPORTED_MODULE_8__.fromValues(transform.targetPosition[0], transform.targetPosition[1], transform.targetPosition[2]);\r\n                const currentPosition = gl_matrix__WEBPACK_IMPORTED_MODULE_8__.lerp(gl_matrix__WEBPACK_IMPORTED_MODULE_8__.create(), gl_matrix__WEBPACK_IMPORTED_MODULE_8__.fromValues(transform.currentPosition[0], transform.currentPosition[1], transform.currentPosition[2]), targetPosition, INTERPOLATION_SPEED * deltaTime);\r\n                transform.currentPosition = (0,_util_math_vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(currentPosition);\r\n                /*\r\n                const TWO_PI = Math.PI\r\n               \r\n                const currentRotation = quat.fromEuler(quat.create(), 0.0, transform.currentRotation / TWO_PI, 0.0)\r\n                const targetRotation = vec3.create()\r\n                quat.getAxisAngle(targetRotation, quat.slerp(quat.create(), currentRotation, quat.fromEuler(quat.create(), 0.0, transform.targetRotation / TWO_PI, 0.0), INTERPOLATION_SPEED * deltaTime))\r\n                targetRotation[1] *= TWO_PI\r\n                \r\n                console.log(targetRotation)\r\n                */\r\n                transform.currentRotation = transform.targetRotation;\r\n                const transformComponent = entity.get(_components_base_component__WEBPACK_IMPORTED_MODULE_6__.ComponentEnum.TRANSFORM);\r\n                transformComponent.setLocalPosition(currentPosition);\r\n                transformComponent.setLocalEulerRotation(gl_matrix__WEBPACK_IMPORTED_MODULE_8__.fromValues(0.0, transform.targetRotation, 0.0));\r\n            }\r\n        };\r\n        this.onRemoteClientConnect = (data) => {\r\n            const { clientId, position, rotation } = data;\r\n            // ToDo: Decide when to spawn client => after first transform package received?\r\n            // can this be part of the inital connect package?\r\n            const lambertMaterial = new _components_material_lambertMaterial__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([Math.random(), Math.random(), Math.random()]);\r\n            const entity = new _scene_entity__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\r\n            const transform = entity.get(_components_base_component__WEBPACK_IMPORTED_MODULE_6__.ComponentEnum.TRANSFORM);\r\n            transform.setLocalPosition(gl_matrix__WEBPACK_IMPORTED_MODULE_8__.fromValues(position[0], position[1], position[2]));\r\n            transform.setLocalEulerRotation(gl_matrix__WEBPACK_IMPORTED_MODULE_8__.fromValues(0.0, rotation, 0.0));\r\n            const humanGeometry = new _components_geometry_geometry__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n            entity.add(humanGeometry);\r\n            entity.add(lambertMaterial);\r\n            this.sceneRoot.get(_components_base_component__WEBPACK_IMPORTED_MODULE_6__.ComponentEnum.TRANSFORM).add(entity);\r\n            const remoteClient = {\r\n                clientId,\r\n                entity,\r\n                transform: {\r\n                    currentPosition: position,\r\n                    targetPosition: position,\r\n                    currentRotation: rotation,\r\n                    targetRotation: rotation\r\n                }\r\n            };\r\n            this.remoteClients.set(clientId, remoteClient);\r\n            _internal_debug__WEBPACK_IMPORTED_MODULE_3__[\"default\"].info(`gameNetworkService::onRemoteClientConnect(): Remote client = '${clientId}' connected.`);\r\n        };\r\n        this.onRemoteClientDisconnect = (data) => {\r\n            const { clientId } = data;\r\n            const { entity } = this.remoteClients.get(clientId);\r\n            this.sceneRoot.get(_components_base_component__WEBPACK_IMPORTED_MODULE_6__.ComponentEnum.TRANSFORM).removeChild(entity);\r\n            this.remoteClients.delete(clientId);\r\n            _internal_debug__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn(`gameNetworkService::onRemoteClientDisconnect(): Remote client = '${clientId}' disconnected!`);\r\n        };\r\n        this.onDeltaStateUpdate = (data) => {\r\n            const transformPackages = data;\r\n            for (const transformPackage of transformPackages) {\r\n                const { clientId, position, rotation } = transformPackage.data;\r\n                // ToDo: Check error handling => this should not happen?\r\n                if (this.client.settings.clientId === clientId || !this.remoteClients.has(clientId)) {\r\n                    //Debug.error(`gameNetworkService::onRemoteClientTransformUpdate(): Received tranform update for client = '${clientId}' who does not exists!`)\r\n                    continue;\r\n                }\r\n                const { transform } = this.remoteClients.get(clientId);\r\n                transform.targetPosition = position;\r\n                transform.targetRotation = rotation;\r\n            }\r\n        };\r\n        this.onLocalClientTransformUpdate = (transform) => {\r\n            const networkPackage = {\r\n                type: \"TRANSFORM\",\r\n                data: {\r\n                    clientId: this.localClient.clientId,\r\n                    position: transform.targetPosition,\r\n                    rotation: transform.targetRotation\r\n                }\r\n            };\r\n            this.client.sendPackage(\"GAME\", networkPackage);\r\n        };\r\n        this.client = client;\r\n        this.localClient = createLocalClient(client.settings.clientId, entity);\r\n        this.sceneRoot = sceneRoot;\r\n        this.remoteClients = new Map();\r\n        this.client.subscribe(\"GAME\", \"CONNECT\", this.onRemoteClientConnect);\r\n        this.client.subscribe(\"GAME\", \"DISCONNECT\", this.onRemoteClientDisconnect);\r\n        this.client.subscribe(\"GAME\", \"DELTA_STATE\", this.onDeltaStateUpdate);\r\n        this.client.subscribe(\"GLOBAL\", \"CONNECT\", this.onConnect);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/network/gameNetworkController.ts?");

/***/ }),

/***/ "./src/core/renderer/renderer.ts":
/*!***************************************!*\
  !*** ./src/core/renderer/renderer.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Renderer)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _components_base_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/base/component */ \"./src/core/components/base/component.ts\");\n/* harmony import */ var _internal_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/debug */ \"./src/core/internal/debug.ts\");\n\r\n\r\n\r\nconst DEFAULT_CLEAR_COLOR = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.fromValues(0.549, 0.745, 0.839);\r\nclass Renderer {\r\n    constructor(canvas) {\r\n        this.renderEntity = (entity, camera) => {\r\n            const geometry = entity.get(_components_base_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.GEOMETRY);\r\n            if (!geometry)\r\n                return;\r\n            const material = entity.get(_components_base_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.MATERIAL);\r\n            if (!material)\r\n                _internal_debug__WEBPACK_IMPORTED_MODULE_1__[\"default\"].material.bindBase(this.gl, entity, camera);\r\n            else\r\n                material.bindBase(this.gl, entity, camera);\r\n            if (!geometry.bind(this.gl, material))\r\n                return;\r\n            if (geometry.buffer.indices)\r\n                this.gl.drawElements(geometry.drawMode, geometry.vertex.indices.length, this.gl.UNSIGNED_SHORT, 0);\r\n            else\r\n                this.gl.drawArrays(geometry.drawMode, 0, geometry.vertex.count);\r\n            this.stats.drawCalls++;\r\n            this.stats.vertexCount += geometry.vertex.count;\r\n        };\r\n        this.renderEntities = (renderList, camera) => {\r\n            const startTime = Date.now();\r\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n            this.stats.drawCalls = 0;\r\n            this.stats.vertexCount = 0;\r\n            for (const entity of renderList)\r\n                this.renderEntity(entity, camera);\r\n            this.stats.drawTime = Math.ceil(Date.now() - startTime);\r\n            _internal_debug__WEBPACK_IMPORTED_MODULE_1__[\"default\"].updateStats({ renderer: this.stats });\r\n        };\r\n        this.gl = canvas.getContext('webgl2');\r\n        this.stats = {\r\n            drawTime: 0,\r\n            drawCalls: 0,\r\n            vertexCount: 0\r\n        };\r\n        if (!this.gl) {\r\n            console.error('Failed to initialize WebGL!');\r\n            return;\r\n        }\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n        this.gl.depthFunc(this.gl.LEQUAL);\r\n        this.gl.clearColor(DEFAULT_CLEAR_COLOR[0], DEFAULT_CLEAR_COLOR[1], DEFAULT_CLEAR_COLOR[2], 1.0);\r\n        this.gl.clearDepth(1.0);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/renderer/renderer.ts?");

/***/ }),

/***/ "./src/core/scene/entity.ts":
/*!**********************************!*\
  !*** ./src/core/scene/entity.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Entity)\n/* harmony export */ });\n/* harmony import */ var _components_base_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/base/component */ \"./src/core/components/base/component.ts\");\n/* harmony import */ var _components_base_transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/base/transform */ \"./src/core/components/base/transform.ts\");\n\r\n\r\nclass Entity {\r\n    constructor() {\r\n        this.add = (component) => {\r\n            const { type } = component;\r\n            if (this.components[type])\r\n                return null;\r\n            this.components[type] = component;\r\n            if (component.onAdd)\r\n                component.onAdd(this);\r\n            return component;\r\n        };\r\n        this.remove = (type) => {\r\n            if (!this.components[type])\r\n                return false;\r\n            this.components[type] = null;\r\n            return true;\r\n        };\r\n        this.get = (type) => {\r\n            return this.components[type] || null;\r\n        };\r\n        this.components = new Array();\r\n        this.add(new _components_base_transform__WEBPACK_IMPORTED_MODULE_1__[\"default\"]());\r\n    }\r\n    *[Symbol.iterator]() {\r\n        const entities = new Array();\r\n        const traverse = (parent) => {\r\n            for (const child of parent.get(_components_base_component__WEBPACK_IMPORTED_MODULE_0__.ComponentEnum.TRANSFORM).children)\r\n                traverse(child);\r\n            if (this === parent)\r\n                return;\r\n            entities.push(parent);\r\n        };\r\n        traverse(this);\r\n        for (const entity of entities)\r\n            yield entity;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/scene/entity.ts?");

/***/ }),

/***/ "./src/core/scene/scene.ts":
/*!*********************************!*\
  !*** ./src/core/scene/scene.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Scene)\n/* harmony export */ });\n/* harmony import */ var _components_geometry_grid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/geometry/grid */ \"./src/core/components/geometry/grid.ts\");\n/* harmony import */ var _components_material_unlitMaterial__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/material/unlitMaterial */ \"./src/core/components/material/unlitMaterial.ts\");\n/* harmony import */ var _internal_debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/debug */ \"./src/core/internal/debug.ts\");\n/* harmony import */ var _network_gameNetworkController__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../network/gameNetworkController */ \"./src/core/network/gameNetworkController.ts\");\n/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./entity */ \"./src/core/scene/entity.ts\");\n/* harmony import */ var _components_base_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/base/component */ \"./src/core/components/base/component.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass Scene {\r\n    constructor(camera, clientEntity = null, client = null) {\r\n        this.update = () => {\r\n            const startTime = Date.now();\r\n            this.entities = [];\r\n            this.updateEntity(this.root, this.camera, true);\r\n            this.stats.updateTime = Math.ceil(Date.now() - startTime);\r\n            this.stats.entityCount = this.entities.length;\r\n            if (!this.networkController)\r\n                return;\r\n            this.networkController.update();\r\n        };\r\n        this.updateEntity = (entity, camera, recursive = false) => {\r\n            this.updateEntityTransform(entity);\r\n            this.updateEntityComponents(entity, camera);\r\n            this.entities.push(entity);\r\n            if (!recursive)\r\n                return;\r\n            for (const child of entity)\r\n                this.updateEntity(child, camera);\r\n        };\r\n        this.updateEntityTransform = (entity) => {\r\n            entity.get(_components_base_component__WEBPACK_IMPORTED_MODULE_5__.ComponentEnum.TRANSFORM).onUpdate();\r\n        };\r\n        this.updateEntityComponents = (entity, camera) => {\r\n            entity.components.forEach((component) => {\r\n                if (component.onUpdate && component.type !== _components_base_component__WEBPACK_IMPORTED_MODULE_5__.ComponentEnum.TRANSFORM)\r\n                    component.onUpdate(entity, camera);\r\n            });\r\n        };\r\n        // this returns a \"display list\" for all visible entities that are in the camera frustrum\r\n        this.getVisibleEntities = () => {\r\n            const startTime = Date.now();\r\n            const cameraComponent = this.camera.get(_components_base_component__WEBPACK_IMPORTED_MODULE_5__.ComponentEnum.CAMERA);\r\n            const visibleEnties = this.getEntities().filter(entity => cameraComponent.isEntityInFrustrum(entity));\r\n            this.stats.cullTime = Math.ceil(Date.now() - startTime);\r\n            this.stats.cullCount = this.stats.entityCount - visibleEnties.length;\r\n            _internal_debug__WEBPACK_IMPORTED_MODULE_2__[\"default\"].updateStats({ scene: this.stats });\r\n            return visibleEnties;\r\n        };\r\n        this.getEntities = () => {\r\n            return this.entities;\r\n        };\r\n        this.add = (entity) => {\r\n            const rootTransform = this.root.get(_components_base_component__WEBPACK_IMPORTED_MODULE_5__.ComponentEnum.TRANSFORM);\r\n            rootTransform.add(entity);\r\n            return entity;\r\n        };\r\n        this.toggleBoundingVolumes = () => {\r\n            if (!this.root)\r\n                return \"Failed toggeling bounding volumes = no scene root found!\";\r\n            const toggleBoundingVolume = (entity) => {\r\n                const boundingVolume = entity.get(_components_base_component__WEBPACK_IMPORTED_MODULE_5__.ComponentEnum.BOUNDING_VOLUME);\r\n                if (!boundingVolume)\r\n                    return;\r\n                boundingVolume.setVisible(!boundingVolume.visible);\r\n            };\r\n            const toggleFrustrumPlane = (frustrumPlane) => {\r\n                const frustrumPlaneGeometry = frustrumPlane.get(_components_base_component__WEBPACK_IMPORTED_MODULE_5__.ComponentEnum.GEOMETRY);\r\n                frustrumPlaneGeometry.visible = !frustrumPlaneGeometry.visible;\r\n            };\r\n            for (const entity of this.entities)\r\n                toggleBoundingVolume(entity);\r\n            for (const frustrumPlane of this.camera)\r\n                toggleFrustrumPlane(frustrumPlane);\r\n            return \"Renderer::toggleBondingVolumes(): Toggled bounding volumes.\";\r\n        };\r\n        this.root = new _entity__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\r\n        this.camera = camera;\r\n        // ToDo: Add entities with scene.add() instead while update loop?\r\n        // handle entity passing with integer id?\r\n        this.entities = new Array();\r\n        this.stats = {\r\n            updateTime: 0,\r\n            entityCount: 0,\r\n            cullTime: 0,\r\n            cullCount: 0\r\n        };\r\n        const grid = new _entity__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\r\n        grid.get(_components_base_component__WEBPACK_IMPORTED_MODULE_5__.ComponentEnum.TRANSFORM).setLocalScale([10.0, 10.0, 10.0]);\r\n        grid.get(_components_base_component__WEBPACK_IMPORTED_MODULE_5__.ComponentEnum.TRANSFORM).setLocalPosition([-5.0, 0.0, -5.0]);\r\n        grid.add(new _components_geometry_grid__WEBPACK_IMPORTED_MODULE_0__[\"default\"](10));\r\n        grid.add(new _components_material_unlitMaterial__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([0.75, 0.75, 0.75]));\r\n        this.root.get(_components_base_component__WEBPACK_IMPORTED_MODULE_5__.ComponentEnum.TRANSFORM).add(grid);\r\n        _internal_debug__WEBPACK_IMPORTED_MODULE_2__[\"default\"].console.registerCommand({ name: \"bv\", description: \"Visualize bounding volumes.\", callback: this.toggleBoundingVolumes });\r\n        if (!clientEntity || !client)\r\n            return;\r\n        this.networkController = new _network_gameNetworkController__WEBPACK_IMPORTED_MODULE_3__[\"default\"](client, this.root, clientEntity);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/core/scene/scene.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_components_base_camera__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/components/base/camera */ \"./src/core/components/base/camera.ts\");\n/* harmony import */ var _core_scene_entity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core/scene/entity */ \"./src/core/scene/entity.ts\");\n/* harmony import */ var _core_components_material_lambertMaterial__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/components/material/lambertMaterial */ \"./src/core/components/material/lambertMaterial.ts\");\n/* harmony import */ var _core_components_geometry_terrain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/components/geometry/terrain */ \"./src/core/components/geometry/terrain.ts\");\n/* harmony import */ var _core_components_base_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/components/base/component */ \"./src/core/components/base/component.ts\");\n/* harmony import */ var _core_components_scripts_turntable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core/components/scripts/turntable */ \"./src/core/components/scripts/turntable.ts\");\n/* harmony import */ var _core_engine__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./core/engine */ \"./src/core/engine.ts\");\n/* harmony import */ var _util_loader_gltfLoader__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util/loader/gltfLoader */ \"./src/util/loader/gltfLoader.ts\");\n/* harmony import */ var _core_internal_debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./core/internal/debug */ \"./src/core/internal/debug.ts\");\n/* harmony import */ var _core_components_material_fresnelMaterial__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./core/components/material/fresnelMaterial */ \"./src/core/components/material/fresnelMaterial.ts\");\n/* harmony import */ var _core_components_geometry_bone__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core/components/geometry/bone */ \"./src/core/components/geometry/bone.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n  Ideas:\r\n  - scene skybox\r\n  - update terrain lod\r\n  - thirdPersonControls\r\n  - animation => skinning matrix\r\n  - device capibility check and lod (mesh, shader, textures, ...)\r\n  - streaming (network and scene)\r\n  - scene, sceneNetworkController, remoteClient Component, networkedTransfrom Component\r\n  - module bundle namespace\r\n  - app-sandbox\r\n  - level wording\r\n  - base-server, chat-server, scene-server\r\n\r\n  ToDo:\r\n  - transform local matrix\r\n  - min max from gltf and fallback calculation\r\n\r\n  - this in component callbacks\r\n  - transform rotation as quaternions\r\n  - reduce matrix multipications => cache bounding volume data\r\n  - make component state easily serializable by adding functions to interface\r\n  - canvas resize event\r\n  - namespaces that abstracts initialisation (and entity assemby?)\r\n  - abstract component constructor arguments into options objects\r\n\r\n  - clientId\r\n  - server network package verification => block unallowed\r\n  - server client authentication\r\n  - server append clientId\r\n  - client do not send client id in packages\r\n  - game network manager => create local and remote client compoents for entities\r\n  - server connect with same client id after reload\r\n  - come up with a dynamic networking model => check o3d engine talk (state, event, ...)\r\n\r\n  - instanced mesh system\r\n  - camera frustrum performance\r\n  - rename wording for channels to \"SCENE\" and \"CHAT\"\r\n\r\n*/\r\n/*\r\n  ### Skinning ###\r\n\r\n  Components:\r\n  \r\n  - Animator => keyframe, animation\r\n  - SkinnedGeometry => joint, rig\r\n*/\r\nconst main = () => {\r\n    const canvas = document.getElementById('glCanvas');\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n    const sceneCamera = new _core_scene_entity__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n    sceneCamera.get(_core_components_base_component__WEBPACK_IMPORTED_MODULE_4__.ComponentEnum.TRANSFORM).setLocalPosition([0.0, 1.0, 6.0]);\r\n    sceneCamera.add(new _core_components_base_camera__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.PI * 0.3, canvas.width / canvas.height));\r\n    const engine = new _core_engine__WEBPACK_IMPORTED_MODULE_6__[\"default\"](canvas, sceneCamera);\r\n    const rootBone = new _core_scene_entity__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n    rootBone.add(new _core_components_geometry_bone__WEBPACK_IMPORTED_MODULE_10__[\"default\"]());\r\n    rootBone.add(_core_internal_debug__WEBPACK_IMPORTED_MODULE_8__[\"default\"].material);\r\n    let prevBoneTransform = rootBone.get(_core_components_base_component__WEBPACK_IMPORTED_MODULE_4__.ComponentEnum.TRANSFORM);\r\n    prevBoneTransform.setLocalPosition([-1, 0, 0]);\r\n    for (let boneIndex = 1; boneIndex < 3; boneIndex++) {\r\n        const bone = new _core_scene_entity__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n        bone.add(new _core_components_geometry_bone__WEBPACK_IMPORTED_MODULE_10__[\"default\"]());\r\n        bone.add(_core_internal_debug__WEBPACK_IMPORTED_MODULE_8__[\"default\"].material);\r\n        const boneTransform = bone.get(_core_components_base_component__WEBPACK_IMPORTED_MODULE_4__.ComponentEnum.TRANSFORM);\r\n        boneTransform.setLocalPosition([0, boneIndex, 0]);\r\n        boneTransform.setLocalPosition([0, 0, Math.PI * 0.1]);\r\n        prevBoneTransform.add(bone);\r\n    }\r\n    engine.scene.add(rootBone);\r\n    (0,_util_loader_gltfLoader__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(\"http://localhost:8080/res/geo/testAnimGeo.gltf\").then(({ geometry }) => {\r\n        const lambertMaterial = new _core_components_material_lambertMaterial__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([1.0, 1.0, 1.0]);\r\n        const entity = new _core_scene_entity__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n        entity.add(geometry[0]);\r\n        entity.add(lambertMaterial);\r\n        engine.scene.add(entity);\r\n    }).catch((error) => _core_internal_debug__WEBPACK_IMPORTED_MODULE_8__[\"default\"].error(`index::loadGltf(): Failed loading test animation geometry = ${error}`));\r\n    (0,_util_loader_gltfLoader__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(\"http://localhost:8080/res/geo/testGeo.gltf\").then(({ geometry }) => {\r\n        const material = new _core_components_material_fresnelMaterial__WEBPACK_IMPORTED_MODULE_9__[\"default\"]([1.0, 1.0, 1.0]);\r\n        for (let geoIndex = 0; geoIndex < geometry.length; geoIndex++) {\r\n            const entity = new _core_scene_entity__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n            entity.get(_core_components_base_component__WEBPACK_IMPORTED_MODULE_4__.ComponentEnum.TRANSFORM).setLocalPosition([geoIndex - 3 + geoIndex, 0, -4]);\r\n            entity.add(geometry[geoIndex]);\r\n            entity.add(new _core_components_scripts_turntable__WEBPACK_IMPORTED_MODULE_5__[\"default\"](1, [0, 1, 0]));\r\n            entity.add(material);\r\n            engine.scene.add(entity);\r\n        }\r\n    }).catch((error) => _core_internal_debug__WEBPACK_IMPORTED_MODULE_8__[\"default\"].error(`index::loadGltf(): Failed loading test geometry = ${error}`));\r\n    const terrain = new _core_scene_entity__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n    terrain.add(new _core_components_geometry_terrain__WEBPACK_IMPORTED_MODULE_3__[\"default\"]());\r\n    engine.scene.add(terrain);\r\n    engine.scene.add(sceneCamera);\r\n};\r\nwindow.onload = main;\r\n\n\n//# sourceURL=webpack:///./src/index.ts?");

/***/ }),

/***/ "./src/util/loader/gltfLoader.ts":
/*!***************************************!*\
  !*** ./src/util/loader/gltfLoader.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ loadGltf)\n/* harmony export */ });\n/* harmony import */ var _core_components_geometry_geometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/components/geometry/geometry */ \"./src/core/components/geometry/geometry.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\nvar ComponentType;\r\n(function (ComponentType) {\r\n    ComponentType[ComponentType[\"SCALAR\"] = 1] = \"SCALAR\";\r\n    ComponentType[ComponentType[\"VEC2\"] = 2] = \"VEC2\";\r\n    ComponentType[ComponentType[\"VEC3\"] = 3] = \"VEC3\";\r\n})(ComponentType || (ComponentType = {}));\r\nconst parseGeometry = (gltf, bufferData) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const { meshes, accessors, bufferViews } = gltf;\r\n    const geometries = new Array();\r\n    const getBufferViewFromAccessorIndex = (accessorIndex, component) => {\r\n        const accessorEntry = accessors[accessorIndex];\r\n        const { bufferView, componentType, count, type, } = accessorEntry;\r\n        const bufferViewEntry = bufferViews[bufferView];\r\n        const { buffer, byteLength, byteOffset, } = bufferViewEntry;\r\n        switch (component) {\r\n            case ComponentType.SCALAR:\r\n                return new Uint16Array(bufferData[buffer], byteOffset, count);\r\n            default:\r\n                return new Float32Array(bufferData[buffer], byteOffset, count * component);\r\n        }\r\n    };\r\n    for (const mesh of meshes) {\r\n        const { primitives, name } = mesh;\r\n        for (const primitive of primitives) {\r\n            const { attributes } = primitive;\r\n            const geometry = new _core_components_geometry_geometry__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n            const indicesAccessorIndex = primitive.indices;\r\n            const indices = getBufferViewFromAccessorIndex(indicesAccessorIndex, ComponentType.SCALAR);\r\n            let position = null;\r\n            let normal = null;\r\n            let texcoord = null;\r\n            for (const [key, value] of Object.entries(attributes)) {\r\n                switch (key) {\r\n                    case \"POSITION\": {\r\n                        const positionAccessorIndex = value;\r\n                        position = getBufferViewFromAccessorIndex(positionAccessorIndex, ComponentType.VEC3);\r\n                        break;\r\n                    }\r\n                    case \"NORMAL\": {\r\n                        const normalAccessorIndex = value;\r\n                        normal = getBufferViewFromAccessorIndex(normalAccessorIndex, ComponentType.VEC3);\r\n                        break;\r\n                    }\r\n                    case \"TEXCOORD_0\": {\r\n                        const texcoordAccessorIndex = value;\r\n                        texcoord = getBufferViewFromAccessorIndex(texcoordAccessorIndex, ComponentType.VEC2);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            geometry.setVertices({\r\n                position,\r\n                normal,\r\n                indices,\r\n                texcoord\r\n            });\r\n            geometries.push(geometry);\r\n        }\r\n    }\r\n    return geometries;\r\n});\r\nfunction loadGltf(uri) {\r\n    return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n        const uriParts = uri.split('/');\r\n        uriParts.pop();\r\n        const baseUri = uriParts.join('/');\r\n        const gltfResponse = yield fetch(uri, {\r\n            method: 'GET'\r\n        });\r\n        if (!gltfResponse.ok) {\r\n            reject(new Error(`gltfLoader::load(): Failed to load from uri = ${uri}`));\r\n            return;\r\n        }\r\n        const gltf = yield gltfResponse.json();\r\n        console.log(gltf);\r\n        const { buffers } = gltf;\r\n        const bufferData = new Array();\r\n        for (const buffer of buffers) {\r\n            const { size, uri } = buffer;\r\n            const bufferResponse = yield fetch(`${baseUri}/${uri}`, {\r\n                method: 'GET'\r\n            });\r\n            if (!bufferResponse.ok) {\r\n                reject(new Error(`gltfLoader::load(): Failed to load from uri = ${uri}`));\r\n                return;\r\n            }\r\n            bufferData.push(yield bufferResponse.arrayBuffer());\r\n        }\r\n        resolve({\r\n            geometry: yield parseGeometry(gltf, bufferData)\r\n        });\r\n    }));\r\n}\r\n\n\n//# sourceURL=webpack:///./src/util/loader/gltfLoader.ts?");

/***/ }),

/***/ "./src/util/math/clamp.ts":
/*!********************************!*\
  !*** ./src/util/math/clamp.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ clamp)\n/* harmony export */ });\nfunction clamp(value, min, max) {\r\n    if (value < min)\r\n        value += max;\r\n    if (value > max)\r\n        value -= max;\r\n    return value;\r\n}\r\n\n\n//# sourceURL=webpack:///./src/util/math/clamp.ts?");

/***/ }),

/***/ "./src/util/math/frustrum.ts":
/*!***********************************!*\
  !*** ./src/util/math/frustrum.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PlaneIndex\": () => (/* binding */ PlaneIndex),\n/* harmony export */   \"default\": () => (/* binding */ createFrustrum)\n/* harmony export */ });\n/* harmony import */ var _plane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./plane */ \"./src/util/math/plane.ts\");\n\r\nvar PlaneIndex;\r\n(function (PlaneIndex) {\r\n    PlaneIndex[PlaneIndex[\"TOP\"] = 0] = \"TOP\";\r\n    PlaneIndex[PlaneIndex[\"BOTTOM\"] = 1] = \"BOTTOM\";\r\n    PlaneIndex[PlaneIndex[\"RIGHT\"] = 2] = \"RIGHT\";\r\n    PlaneIndex[PlaneIndex[\"LEFT\"] = 3] = \"LEFT\";\r\n    PlaneIndex[PlaneIndex[\"FAR\"] = 4] = \"FAR\";\r\n    PlaneIndex[PlaneIndex[\"NEAR\"] = 5] = \"NEAR\";\r\n})(PlaneIndex || (PlaneIndex = {}));\r\nfunction createFrustrum() {\r\n    return {\r\n        planes: new Array((0,_plane__WEBPACK_IMPORTED_MODULE_0__.createPlane)(), (0,_plane__WEBPACK_IMPORTED_MODULE_0__.createPlane)(), (0,_plane__WEBPACK_IMPORTED_MODULE_0__.createPlane)(), (0,_plane__WEBPACK_IMPORTED_MODULE_0__.createPlane)(), (0,_plane__WEBPACK_IMPORTED_MODULE_0__.createPlane)(), (0,_plane__WEBPACK_IMPORTED_MODULE_0__.createPlane)()),\r\n        positions: new Array(),\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack:///./src/util/math/frustrum.ts?");

/***/ }),

/***/ "./src/util/math/plane.ts":
/*!********************************!*\
  !*** ./src/util/math/plane.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPlaneFromPoints\": () => (/* binding */ createPlaneFromPoints),\n/* harmony export */   \"createPlane\": () => (/* binding */ createPlane)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n\r\nfunction createPlaneFromPoints(p1, p2, p3) {\r\n    const p1p2 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create();\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_0__.sub(p1p2, p2, p1);\r\n    const p1p3 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create();\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_0__.sub(p1p3, p3, p1);\r\n    const normal = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create();\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_0__.cross(normal, p1p2, p1p3);\r\n    gl_matrix__WEBPACK_IMPORTED_MODULE_0__.normalize(normal, normal);\r\n    // ToDo: Search for expliation\r\n    const distance = -1.0 * gl_matrix__WEBPACK_IMPORTED_MODULE_0__.dot(normal, p2);\r\n    return {\r\n        distance,\r\n        normal,\r\n    };\r\n}\r\nfunction createPlane() {\r\n    return {\r\n        distance: 0.0,\r\n        normal: gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create()\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack:///./src/util/math/plane.ts?");

/***/ }),

/***/ "./src/util/math/round.ts":
/*!********************************!*\
  !*** ./src/util/math/round.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"roundNumber\": () => (/* binding */ roundNumber)\n/* harmony export */ });\nfunction roundNumber(number) {\r\n    return Math.round(number * 1000) * 0.001;\r\n}\r\n\n\n//# sourceURL=webpack:///./src/util/math/round.ts?");

/***/ }),

/***/ "./src/util/math/vector.ts":
/*!*********************************!*\
  !*** ./src/util/math/vector.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vec3ToRoundedArray)\n/* harmony export */ });\n/* harmony import */ var _round__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./round */ \"./src/util/math/round.ts\");\n\r\nfunction vec3ToRoundedArray(vec3) {\r\n    const x = (0,_round__WEBPACK_IMPORTED_MODULE_0__.roundNumber)(vec3[0]);\r\n    const y = (0,_round__WEBPACK_IMPORTED_MODULE_0__.roundNumber)(vec3[1]);\r\n    const z = (0,_round__WEBPACK_IMPORTED_MODULE_0__.roundNumber)(vec3[2]);\r\n    return [x, y, z];\r\n}\r\n\n\n//# sourceURL=webpack:///./src/util/math/vector.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;